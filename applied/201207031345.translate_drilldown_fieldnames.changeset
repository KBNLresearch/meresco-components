Changeset created on Tue Jul 03 13:45:40 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Added TranslateDrilldownFieldnames

    TranslateDrilldownFieldnames component can hide the fieldnames used
    in the SRU interface from the internal fieldnames.

Baseline version: 4.0.15

From 2facfca972904fcd9bcf85ef8afb5d7c8feebaa1 Mon Sep 17 00:00:00 2001
From: Seecr <development@seecr.nl>
Date: Tue, 3 Jul 2012 12:25:01 +0200
Subject: [PATCH 1/2] JPM/TJ: adding TranslateDrilldownFieldnames from project Edurep (Stichting Kennisnet) to Meresco Components.

---
 doc/license.conf                                   |    5 ++-
 meresco/components/drilldown/__init__.py           |    4 +-
 .../drilldown/translatedrilldownfieldnames.py      |   49 ++++++++++++++++++++
 3 files changed, 56 insertions(+), 2 deletions(-)
 create mode 100644 meresco/components/drilldown/translatedrilldownfieldnames.py

diff --git a/doc/license.conf b/doc/license.conf
index 54af386..a05c750 100644
--- a/doc/license.conf
+++ b/doc/license.conf
@@ -3,7 +3,9 @@
     "description": "\"Meresco Components\" are components to build searchengines, repositories\nand archives, based on \"Meresco Core\".",
     "license": "GPLv2",
     "copyrights": [
-        {"name": "Seecr (Seek You Too B.V.)", "url": "http://seecr.nl", "years": [2012]}
+        {"name": "Seecr (Seek You Too B.V.)", "url": "http://seecr.nl", "years": [2012]},
+        {"name": "Stichting Bibliotheek.nl (BNL)", "url": "http://stichting.bibliotheek.nl", "years": [2012]},
+        {"name": "Stichting Kennisnet", "url": "http://www.kennisnet.nl", "years": [2012]}
     ],
     "copyrights_unused": [
         {"name": "Deltares", "url": "http://www.deltares.nl", "years": [2011]},
@@ -11,6 +13,7 @@
         {"name": "Delft University of Technology", "url": "http://www.tudelft.nl", "years": [2009]},
         {"name": "Tilburg University", "url": "http://www.uvt.nl", "years": [2009]},
         {"name": "Stichting Kennisnet", "url": "http://www.kennisnet.nl", "years": [2011]},
+        {"name": "Stichting Bibliotheek.nl (BNL)", "url": "http://stichting.bibliotheek.nl", "years": [2012]},
         {"name": "Netherlands Institute for Sound and Vision", "url": "http://instituut.beeldengeluid.nl/", "years": [2011]}
     ]
 }
diff --git a/meresco/components/drilldown/__init__.py b/meresco/components/drilldown/__init__.py
index 56fa6ce..0d1cf43 100644
--- a/meresco/components/drilldown/__init__.py
+++ b/meresco/components/drilldown/__init__.py
@@ -8,6 +8,8 @@
 # Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 # Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
 # Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Components"
 # 
@@ -30,4 +32,4 @@
 from srufielddrilldown import SRUFieldDrilldown
 from srutermdrilldown import SRUTermDrilldown
 from drilldown import DRILLDOWN_HEADER, DRILLDOWN_FOOTER, DEFAULT_MAXIMUM_TERMS
-
+from translatedrilldownfieldnames import TranslateDrilldownFieldnames
diff --git a/meresco/components/drilldown/translatedrilldownfieldnames.py b/meresco/components/drilldown/translatedrilldownfieldnames.py
new file mode 100644
index 0000000..c8c7764
--- /dev/null
+++ b/meresco/components/drilldown/translatedrilldownfieldnames.py
@@ -0,0 +1,49 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+class TranslateDrilldownFieldnames(Observable):
+    def __init__(self, translate):
+        Observable.__init__(self)
+        self.translate = translate
+
+    def executeQuery(self, *args, **kwargs):
+        fieldnamesAndMaximums = kwargs['fieldnamesAndMaximums'] if 'fieldnamesAndMaximums' in kwargs else None
+        if fieldnamesAndMaximums is None:
+            response = yield self.any.executeQuery(*args, **kwargs)
+            raise StopIteration(response)
+        reverseLookup = {}
+        translatedFields = []
+        for field, maximum, sort in fieldnamesAndMaximums:
+            translated = self.translate(field)
+            translatedFields.append((translated, maximum, sort))
+            reverseLookup[translated] = field
+        kwargs['fieldnamesAndMaximums'] = translatedFields
+        response = yield self.any.executeQuery(*args, **kwargs)
+        response.drilldownData = [(reverseLookup[field], termCounts)
+            for field, termCounts in response.drilldownData]
+        raise StopIteration(response)
+
-- 
1.7.2.5


From 6311408cbaba676cf5e97212cf4c2b7c069045f1 Mon Sep 17 00:00:00 2001
From: Seecr <development@seecr.nl>
Date: Tue, 3 Jul 2012 14:37:48 +0200
Subject: [PATCH 2/2] TJ/JPM: introduced TranslateDrilldownFilenamesTest

---
 .../drilldown/translatedrilldownfieldnames.py      |   10 +-
 test/_alltests.py                                  |    4 +-
 test/drilldown/translatedrilldownfieldnamestest.py |   88 ++++++++++++++++++++
 3 files changed, 96 insertions(+), 6 deletions(-)
 create mode 100644 test/drilldown/translatedrilldownfieldnamestest.py

diff --git a/meresco/components/drilldown/translatedrilldownfieldnames.py b/meresco/components/drilldown/translatedrilldownfieldnames.py
index c8c7764..d37c3d8 100644
--- a/meresco/components/drilldown/translatedrilldownfieldnames.py
+++ b/meresco/components/drilldown/translatedrilldownfieldnames.py
@@ -25,23 +25,23 @@
 # 
 ## end license ##
 
+from meresco.core import Observable
+
 class TranslateDrilldownFieldnames(Observable):
     def __init__(self, translate):
         Observable.__init__(self)
         self.translate = translate
 
     def executeQuery(self, *args, **kwargs):
-        fieldnamesAndMaximums = kwargs['fieldnamesAndMaximums'] if 'fieldnamesAndMaximums' in kwargs else None
-        if fieldnamesAndMaximums is None:
-            response = yield self.any.executeQuery(*args, **kwargs)
-            raise StopIteration(response)
+        fieldnamesAndMaximums = kwargs['fieldnamesAndMaximums'] if 'fieldnamesAndMaximums' in kwargs else []
         reverseLookup = {}
         translatedFields = []
         for field, maximum, sort in fieldnamesAndMaximums:
             translated = self.translate(field)
             translatedFields.append((translated, maximum, sort))
             reverseLookup[translated] = field
-        kwargs['fieldnamesAndMaximums'] = translatedFields
+        if translatedFields:
+            kwargs['fieldnamesAndMaximums'] = translatedFields
         response = yield self.any.executeQuery(*args, **kwargs)
         response.drilldownData = [(reverseLookup[field], termCounts)
             for field, termCounts in response.drilldownData]
diff --git a/test/_alltests.py b/test/_alltests.py
index d701604..5e8fc1e 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -9,8 +9,9 @@
 # Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
 # Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 # Copyright (C) 2009 Tilburg University http://www.uvt.nl
-# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2010-2012 Stichting Kennisnet http://www.kennisnet.nl
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
 # 
 # This file is part of "Meresco Components"
 # 
@@ -88,6 +89,7 @@ from autocomplete.autocompletetest import AutocompleteTest
 
 from drilldown.srufielddrilldowntest import SRUFieldDrilldownTest
 from drilldown.srutermdrilldowntest import SRUTermDrilldownTest
+from drilldown.translatedrilldownfieldnamestest import TranslateDrilldownFieldnamesTest
 
 from http.apacheloggertest import ApacheLoggerTest
 from http.argumentsinsessiontest import ArgumentsInSessionTest
diff --git a/test/drilldown/translatedrilldownfieldnamestest.py b/test/drilldown/translatedrilldownfieldnamestest.py
new file mode 100644
index 0000000..3bf7ad7
--- /dev/null
+++ b/test/drilldown/translatedrilldownfieldnamestest.py
@@ -0,0 +1,88 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from seecr.test import SeecrTestCase, CallTrace
+from weightless.core import be, compose
+from meresco.core import Observable
+from meresco.components.facetindex import Response
+
+from meresco.components.drilldown import TranslateDrilldownFieldnames
+
+class TranslateDrilldownFieldnamesTest(SeecrTestCase):
+    def setUp(self):
+        SeecrTestCase.setUp(self)
+        self.response = Response(total=10, hits=[])
+        self.response.drilldownData = []
+        def executeQuery(**kwargs):
+            fieldnamesAndMaximums = kwargs.get('fieldnamesAndMaximums', [])
+            for fieldName, _, _ in fieldnamesAndMaximums:
+                self.response.drilldownData.append((fieldName,  [('value1', 1), ('value2', 2)]))
+            raise StopIteration(self.response)
+            yield
+        self.observer = CallTrace('observer', methods={'executeQuery': executeQuery})
+
+    def testTranslate(self):
+        names = {
+            'name1': 'internal.name1',
+            'name2': 'internal.name2',
+            'othername1': 'internal.name1',
+        }
+        result = self._doDrilldown(translate=names.get,
+                queryKwargs=dict(
+                    query='query', 
+                    fieldnamesAndMaximums=[('name1', 10, True)]))
+
+        self.assertEquals(['executeQuery'], [m.name for m in self.observer.calledMethods])
+        self.assertEquals(dict(query='query', fieldnamesAndMaximums=[('internal.name1', 10, True)]), self.observer.calledMethods[0].kwargs)
+        self.assertEquals(self.response.hits, result.hits)
+        self.assertEquals(self.response.total, result.total)
+        self.assertEquals([
+            ('name1', [('value1', 1), ('value2', 2)]),
+        ], result.drilldownData)
+
+    def testNoTranslateNecessary(self):
+        result = self._doDrilldown(translate=lambda name:'ignored',
+                queryKwargs=dict(query='query'))
+
+        self.assertEquals(self.response.hits, result.hits)
+        self.assertEquals(self.response.total, result.total)
+        self.assertEquals(self.response.drilldownData, result.drilldownData)
+        self.assertEquals("[executeQuery(query='query')]", str(self.observer.calledMethods))
+
+    def _doDrilldown(self, translate, queryKwargs):
+        observable = be(
+            (Observable(),
+                (TranslateDrilldownFieldnames(translate=translate),
+                    (self.observer,)
+                )
+            )
+        )
+        try:
+            compose(observable.any.executeQuery(**queryKwargs)).next()
+        except StopIteration, e:
+            return e.args[0]
+
-- 
1.7.2.5

