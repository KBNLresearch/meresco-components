Index: merescocomponents/facetindex/merescolucene.py
===================================================================
--- merescocomponents/facetindex/merescolucene.py	(revision 1935)
+++ merescocomponents/facetindex/merescolucene.py	(working copy)
@@ -26,11 +26,15 @@
 import sys
 from os.path import join, abspath, dirname, isfile
 
-facetIndexLibPath = join(abspath(dirname(__file__)), "_facetindex.so")
-assert(isfile(facetIndexLibPath))
-sys.path.extend([facetIndexLibPath, 'liblucene-core.so.2'])
+try:
+    import jtool
+    jtool.load(join(abspath(dirname(__file__)), "_facetindex.so"))
+    jtool.load('liblucene-core.so.2')
+except:
+    facetIndexLibPath = join(abspath(dirname(__file__)), "_facetindex.so")
+    assert(isfile(facetIndexLibPath))                                     
+    sys.path.extend([facetIndexLibPath, 'liblucene-core.so.2'])           
 
-import jtool
 from jtool import JClass
 from java.lang import Object, Float
 from java.lang.reflect import Array
@@ -69,7 +73,8 @@
 class MerescoJClass(JClass):
     def __new__(self, name, bases, dct):
         base = bases[0]
-        return JClass.__new__(self, name, bases, dct, jclassname=base.__name__, jlib=base._jlib)
+        kwargs = { 'jlib': base._jlib } if hasattr(base, '_jlib') else {}
+        return JClass.__new__(self, name, bases, dct, jclassname=base.__name__, **kwargs)
     def __repr__(self):
         return 'Submetatype of ' + str(JClass)
     __str__ = __repr__
