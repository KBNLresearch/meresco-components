Changeset created on Mon Mar 26 12:18:42 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Yield after addProcess in PeriodicDownload

    After adding a new process to the reactor the periodicdownloader should yield. 
    This changes the currenthandle in the reactor to this new process. (Otherwise
    the last reader was still the currenthandle and gives problems with suspends)

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/4.0.7-Edurep/version_0

diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/components/periodicdownload.py /home/hendrik/development/meresco/meresco-components/workingsets/4.0.7-Edurep/version_1/meresco/components/periodicdownload.py
--- version_0/meresco/components/periodicdownload.py	2012-03-26 14:04:02.000000000 +0200
+++ version_1/meresco/components/periodicdownload.py	2012-03-26 14:17:40.000000000 +0200
@@ -93,6 +93,7 @@
                 return
 
             self._reactor.addProcess(self._processOne.next)
+            yield
             try:
                 gen = self.all.handle(data=body)
                 g = compose(gen)
Binary files version_0/meresco/components/.periodicdownload.py.swp and /home/hendrik/development/meresco/meresco-components/workingsets/4.0.7-Edurep/version_1/meresco/components/.periodicdownload.py.swp differ
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/periodicdownloadtest.py /home/hendrik/development/meresco/meresco-components/workingsets/4.0.7-Edurep/version_1/test/periodicdownloadtest.py
--- version_0/test/periodicdownloadtest.py	2012-03-26 14:04:11.000000000 +0200
+++ version_1/test/periodicdownloadtest.py	2012-03-26 14:17:51.000000000 +0200
@@ -93,6 +93,7 @@
             callback() # sok.recv
             self.assertEquals("", downloader._err.getvalue())
             self.assertEquals('buildRequest', observer.calledMethods[0].name)
+            callback() # addProcess
             self.assertEquals('handle', observer.calledMethods[1].name)
             self.assertEquals(0, len(observer.calledMethods[1].args))
             self.assertEquals(['data'], observer.calledMethods[1].kwargs.keys())
@@ -189,6 +190,7 @@
             sleep(0.01)
             callback() # _processOne.next -> sok.recv
             callback() # _processOne.next -> recv = ''
+            callback() # addProcess
             self.assertEquals("", downloader._err.getvalue())
             self.assertEquals('handle', observer.calledMethods[1].name)
             self.assertEqualsWS(TWO_RECORDS, observer.calledMethods[1].kwargs['data'])
@@ -209,6 +211,7 @@
             sleep(0.01)
             callback() # _processOne.next -> sok.recv
             callback() # _processOne.next -> recv = ''
+            callback() # addProcess
             self.assertEquals("", downloader._err.getvalue())
             self.assertEquals('handle', observer.calledMethods[1].name)
             self.assertEqualsWS(TWO_RECORDS, observer.calledMethods[1].kwargs['data'])
@@ -234,8 +237,9 @@
             self.assertEquals('buildRequest', observer.calledMethods[0].name)
             sleep(0.01)
             callback() # _processOne.next -> sok.recv
+            callback() # _processOne.next -> recv = ''
             try:
-                callback() # _processOne.next -> recv = ''
+                callback() # addProcess
                 self.assertEquals('', self._downloader._err.getvalue())
                 self.fail('should not get here')
             except AssertionError, e:
@@ -250,6 +254,7 @@
             callback = reactor.calledMethods[3].args[1]
             callback() # sok.recv
             callback() # recv = ''
+            callback() # addProcess
             self.assertEquals("", downloader._err.getvalue())
             self.assertEquals('buildRequest', observer.calledMethods[0].name)
             self.assertEqualsWS(ONE_RECORD, observer.calledMethods[1].kwargs['data'])
@@ -266,6 +271,9 @@
             callback() # _processOne.next -> sok.recv
             callback() # _processOne.next -> recv = ''
             callback() # _processOne.next
+            self.assertEquals('addProcess', reactor.calledMethods[-1].name)
+            callback = reactor.calledMethods[-1].args[0]
+            callback() # _processOne.next
             self.assertEquals('addTimer', reactor.calledMethods[-1].name)
             self.assertEquals(2, reactor.calledMethods[-1].args[0])
             
@@ -299,6 +307,7 @@
             self.assertEquals("GET /path?argument=value HTTP/1.0\r\n\r\n", msgs[0])
             callback() # _processOne.next -> sok.recv
             callback() # _processOne.next -> recv = ''
+            callback() # _processOne.next -> addProcess
             self.assertEquals(['buildRequest', 'buildRequest', 'handle'], [m.name for m in observer.calledMethods])
             callback()
             self.assertReactorState(reactor)
