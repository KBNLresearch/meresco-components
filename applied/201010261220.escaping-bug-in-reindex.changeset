Changeset created on Tue Oct 26 12:20:57 CEST 2010 by Seek You Too

Description: Fixed an escaping bug in the reindex component

    The reindex components now escapes identifiers using escaping.escapeFilename. An identifier with a newline was not escaped and seen as a new record for the reindex component. This is now fixed with escaping the identifier from storage and unescaped when retrieving the record in the reindex process.

Baseline version: meresco-components/workingsets/3.4.4-NED/version_0

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_0/meresco/components/reindex.py version_0-reindex-bug/meresco/components/reindex.py
--- version_0/meresco/components/reindex.py	2010-10-26 11:33:32.000000000 +0200
+++ version_0-reindex-bug/meresco/components/reindex.py	2010-10-26 11:30:59.000000000 +0200
@@ -34,6 +34,7 @@
 from StringIO import StringIO
 from os.path import isdir, join
 from os import makedirs, listdir, remove, rmdir
+from escaping import escapeFilename, unescapeFilename
 
 EMPTYDOC = parse(StringIO('<empty/>'))
 
@@ -74,7 +75,7 @@
         identifiersFound = False
 
         for identifier in self.any.listIdentifiers(self._partName):
-            batch.append(identifier)
+            batch.append(escapeFilename(identifier))
             if len(batch) == batchSize:
                 identifiersFound = self._writeBatch(sessionDirectory, currentBatch, batch)
                 yield "#"
@@ -103,7 +104,7 @@
 
         for identifier in (identifier.strip() for identifier in open(batchFile).readlines()):
             try:
-                yield self.asyncdo.addDocumentPart(identifier=identifier, partname='ignoredName', lxmlNode=EMPTYDOC)
+                yield self.asyncdo.addDocumentPart(identifier=unescapeFilename(identifier), partname='ignoredName', lxmlNode=EMPTYDOC)
             except Exception, e:
                 yield '\n!error processing "%s": %s' % (identifier, str(e))
                 return
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_0/test/reindextest.py version_0-reindex-bug/test/reindextest.py
--- version_0/test/reindextest.py	2010-10-26 11:33:32.000000000 +0200
+++ version_0-reindex-bug/test/reindextest.py	2010-10-26 11:30:23.000000000 +0200
@@ -32,6 +32,7 @@
 from meresco.components import StorageComponent, Reindex, FilterMessages
 from meresco.core import be, Observable
 from lxml.etree import tostring
+from escaping import unescapeFilename, escapeFilename
 
 from os.path import join, isdir
 from os import listdir
@@ -202,4 +203,21 @@
         result = list(compose(reindex.handleRequest(arguments={'session': ['testcase']})))
         result = list(compose(reindex.handleRequest(arguments={'session': ['testcase']})))
         self.assertTrue(str in result, result)
+    
+    def testBatchWithStrangeIdentifier(self):
+        identifier = unescapeFilename("newline%0A >")
+        storage = self.setupStorage([
+            dict(identifier=identifier, partname='part', data='data1'),
+        ])
+        reindex, observer = self.setupDna(storage)
+        result = list(compose(reindex.handleRequest(arguments={'session': ['testcase']})))
+
+        self.assertEquals(['HTTP/1.0 200 OK\r\nContent-Type: plain/text\r\n\r\n', '#', '\n=batches: 1'], result)
+        result = list(compose(reindex.handleRequest(arguments={'session': ['testcase']})))
+        self.assertEquals(['HTTP/1.0 200 OK\r\nContent-Type: plain/text\r\n\r\n', '+%s\n' % escapeFilename(identifier), '=batches left: 0'], result)
+
+        self.assertEquals(['addDocumentPart'], [m.name for m in observer.calledMethods])
+        self.assertEquals([identifier], [m.kwargs['identifier'] for m in observer.calledMethods])
+        self.assertEquals(['ignoredName'], [m.kwargs['partname'] for m in observer.calledMethods])
+        self.assertEquals(['<empty/>'], [tostring(m.kwargs['lxmlNode']) for m in observer.calledMethods])
 
