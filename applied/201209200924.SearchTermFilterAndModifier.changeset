Changeset created on Thu Sep 20 09:24:46 UTC 2012 by Seecr (Seek You Too B.V.)

Description: introduced SearchTermFilterAndModifier

    This class can be used with CqlMultiSearchClauseConversion to conditionally modify search terms.

Baseline version: 4.1.2

From 98381b3bca73cfc5b9d0d610f0d9b0cc0c01b0cb Mon Sep 17 00:00:00 2001
From: Tom van der Sommen <tom@seecr.nl>
Date: Thu, 20 Sep 2012 11:20:50 +0200
Subject: [PATCH 1/1] TS/JPM: added SearchTermFilterAndModifier

---
 meresco/components/cql/__init__.py                 |   27 +++++++
 .../components/cql/searchtermfilterandmodifier.py  |   50 ++++++++++++
 setup.py                                           |    4 +-
 test/_alltests.py                                  |    2 +
 test/cql/__init__.py                               |   25 ++++++
 test/cql/searchtermfilterandmodifiertest.py        |   80 ++++++++++++++++++++
 6 files changed, 187 insertions(+), 1 deletions(-)
 create mode 100644 meresco/components/cql/__init__.py
 create mode 100644 meresco/components/cql/searchtermfilterandmodifier.py
 create mode 100644 test/cql/__init__.py
 create mode 100644 test/cql/searchtermfilterandmodifiertest.py

diff --git a/meresco/components/cql/__init__.py b/meresco/components/cql/__init__.py
new file mode 100644
index 0000000..c45527d
--- /dev/null
+++ b/meresco/components/cql/__init__.py
@@ -0,0 +1,27 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from searchtermfilterandmodifier import SearchTermFilterAndModifier
diff --git a/meresco/components/cql/searchtermfilterandmodifier.py b/meresco/components/cql/searchtermfilterandmodifier.py
new file mode 100644
index 0000000..1d7ac0c
--- /dev/null
+++ b/meresco/components/cql/searchtermfilterandmodifier.py
@@ -0,0 +1,50 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+class SearchTermFilterAndModifier(object):
+    def __init__(self, shouldModifyFieldValue, valueModifier):
+        self._shouldModifyFieldValue = shouldModifyFieldValue
+        self._valueModifier = valueModifier
+
+    def canModify(self, node):
+        #SEARCH_CLAUSE(INDEX(TERM(...)), RELATION(COMPARITOR(...)), SEARCH_TERM(...))
+        if len(node.children) == 3:
+            fieldname = node.children[0].children[0].children[0]
+            relation = node.children[1].children[0].children[0]
+            value = node.children[2].children[0].children[0]
+            if self._shouldModifyFieldValue(fieldname, relation, value):
+                return True
+        return False
+
+    def modify(self, node):
+        searchTerm = node.children[2].children[0]
+        searchTerm.children = (str(self._valueModifier(searchTerm.children[0])),)
+        return node
+
+    def filterAndModifier(self):
+        return self.canModify, self.modify
+
diff --git a/setup.py b/setup.py
index ccaa884..18ab388 100644
--- a/setup.py
+++ b/setup.py
@@ -11,6 +11,7 @@
 # Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 # Copyright (C) 2009 Tilburg University http://www.uvt.nl
 # Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
 # 
 # This file is part of "Meresco Components"
 # 
@@ -38,13 +39,14 @@ setup(
     packages = [
         'meresco.components',
         'meresco.components.autocomplete',
+        'meresco.components.cql',
         'meresco.components.drilldown',
         'meresco.components.facetindex',
         'meresco.components.http',
         'meresco.components.log',
+        'meresco.components.msgbox',
         'meresco.components.ngram',
         'meresco.components.numeric',
-        'meresco.components.msgbox',
         'meresco.components.sru',
         'meresco.components.web',
         'meresco.components.xml_generic',
diff --git a/test/_alltests.py b/test/_alltests.py
index b1d9bb7..088630a 100644
--- a/test/_alltests.py
+++ b/test/_alltests.py
@@ -85,6 +85,8 @@ from xmlxpathtest import XmlXPathTest
 from xpath2fieldtest import XPath2FieldTest
 from xsltcrosswalktest import XsltCrosswalkTest
 
+from cql.searchtermfilterandmodifiertest import SearchTermFilterAndModifierTest
+
 from autocomplete.autocompletetest import AutocompleteTest
 
 from drilldown.srufielddrilldowntest import SRUFieldDrilldownTest
diff --git a/test/cql/__init__.py b/test/cql/__init__.py
new file mode 100644
index 0000000..3441f36
--- /dev/null
+++ b/test/cql/__init__.py
@@ -0,0 +1,25 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
diff --git a/test/cql/searchtermfilterandmodifiertest.py b/test/cql/searchtermfilterandmodifiertest.py
new file mode 100644
index 0000000..7b4988e
--- /dev/null
+++ b/test/cql/searchtermfilterandmodifiertest.py
@@ -0,0 +1,80 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://stichting.bibliotheek.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from unittest import TestCase
+
+from cqlparser import cql2string, parseString
+from meresco.components import CqlMultiSearchClauseConversion
+
+from meresco.components.cql import SearchTermFilterAndModifier
+
+class SearchTermFilterAndModifierTest(TestCase): 
+    def testModifyValue(self):
+        self.assertEquals(
+            'afield exact newvalue', 
+            self.convert(
+                cql='afield exact Pvalue', 
+                shouldModifyFieldValue=lambda name, relation, value: name=='afield' and relation=='exact' and value.startswith('P'), 
+                valueModifier=lambda value: 'newvalue'))
+
+        self.assertEquals(
+            'afield=newvalue', 
+            self.convert(
+                cql='afield=Pvalue',
+                shouldModifyFieldValue=lambda name, relation, value: value.startswith('P') and relation=='=', 
+                valueModifier=lambda value: 'newvalue'))
+
+    def testNothingToBeDone(self):
+        self.assertEquals(
+            'field exact value', 
+            self.convert(
+                cql='field exact value',
+                shouldModifyFieldValue=lambda name, relation, value: name=='afield' and value.startswith('P'), 
+                valueModifier=lambda value: 'newvalue'))
+
+        self.assertEquals(
+            'afield exact value', 
+            self.convert(
+                cql='afield exact value',
+                shouldModifyFieldValue=lambda name, relation, value: name=='afield' and value.startswith('P'), 
+                valueModifier=lambda value: 'newvalue'))
+
+        self.assertEquals(
+            'afield=Pvalue', 
+            self.convert(
+                cql='afield=Pvalue',
+                shouldModifyFieldValue=lambda name, relation, value: name=='afield' and relation=='exact' and value.startswith('P'), 
+                valueModifier=lambda value: 'newvalue'))
+
+    def convert(self, cql, shouldModifyFieldValue, valueModifier):
+        converter = CqlMultiSearchClauseConversion([
+            SearchTermFilterAndModifier(
+                shouldModifyFieldValue=shouldModifyFieldValue,
+                valueModifier=valueModifier).filterAndModifier(),
+            ], fromKwarg="cqlAbstractSyntaxTree")  
+        return cql2string(converter._convert(parseString(cql)))
+
-- 
1.7.2.5

