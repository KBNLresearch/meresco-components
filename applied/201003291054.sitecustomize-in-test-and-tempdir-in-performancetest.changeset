Changeset created on Mon Mar 29 10:54:39 CEST 2010 by Seek You Too

Description: Improved running of tests

    Tests will now use a local sitecustomize so effectively making them
    independent of the system wide sitecustomize.

    Performancetest will now place generated indexes in system tempdir.

Baseline version: meresco-components/workingsets/2.23.5-Maastricht/version_2

diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/_alltests.py version_3/test/_alltests.py
--- version_2/test/_alltests.py	1970-01-01 01:00:00.000000000 +0100
+++ version_3/test/_alltests.py	2010-03-29 10:53:03.000000000 +0200
@@ -0,0 +1,98 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
+#       http://www.kennisnetictopschool.nl
+#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+
+from os import getuid
+assert getuid() != 0, "Do not run tests as 'root'"
+
+from os import system                             #DO_NOT_DISTRIBUTE
+from sys import path as sysPath                   #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')     #DO_NOT_DISTRIBUTE
+                                                  #DO_NOT_DISTRIBUTE
+from glob import glob                             #DO_NOT_DISTRIBUTE
+for path in glob('../deps.d/*'):                  #DO_NOT_DISTRIBUTE
+    sysPath.insert(0, path)                       #DO_NOT_DISTRIBUTE
+sysPath.insert(0,'..')                            #DO_NOT_DISTRIBUTE
+
+import unittest
+
+from sorteditertoolstest import SortedItertoolsTest
+from filelisttest import FileListTest
+from berkeleydicttest import DoubleUniqueBerkeleyDictTest, BerkeleyDictTest
+from packertest import PackerTest
+
+from facetindex.libfacetindextest import LibFacetIndexTest
+from facetindex.docsettest import DocSetTest
+from facetindex.docsetlisttest import DocSetListTest
+from facetindex.trietest import TrieTest
+from facetindex.pooltest import PoolTest
+from facetindex.cqlparsetreetolucenequerytest import CqlParseTreeToLuceneQueryTest
+from facetindex.cql2lucenequerytest import Cql2LuceneQueryTest
+from facetindex.triedicttest import TrieDictTest
+
+from facetindex.documenttest import DocumentTest
+from facetindex.lucenetest import LuceneTest
+from facetindex.drilldowntest import DrilldownTest
+from facetindex.fields2lucenedocumenttest import Fields2LuceneDocumentTest
+
+from facetindex.incrementalindexingtest import IncrementalIndexingTest
+from facetindex.integerlisttest import IntegerListTest
+from facetindex.clausecollectortest import ClauseCollectorTest
+
+from ngram.ngramtest import NGramTest
+from ngram.ngramquerytest import NGramQueryTest
+from ngram.ngramindextest import NGramIndexTest
+from ngram.cqlsuggestertest import CqlSuggesterTest
+from ngram.cqltermvisitortest import CqlTermVisitorTest
+
+# incremental indexing
+from facetindex.lucenedocidtrackertest import LuceneDocIdTrackerTest
+
+from oai.fields2oairecordtest import Fields2OaiRecordTest
+from oai.oaigetrecordtest import OaiGetRecordTest
+from oai.oailistmetadataformatstest import OaiListMetadataFormatsTest
+from oai.oailistsetstest import OaiListSetsTest
+from oai.oailisttest import OaiListTest
+from oai.oaipmhtest import OaiPmhTest, OaiPmhWithIdentifierTest
+from oai.oaipmhjazztest import OaiPmhJazzTest
+from oai.oaitooltest import OaiToolTest
+from oai.oaiprovenancetest import OaiProvenanceTest
+from oai.resumptiontokentest import ResumptionTokenTest
+from oai.oaisetselecttest import OaiSetSelectTest
+from oai.xml2documenttest import Xml2DocumentTest
+from oai.oaijazztest import OaiJazzTest
+from oai.oaiaddrecordtest import OaiAddRecordTest
+from oai.oaijazzimplementationstest import OaiJazzImplementationsTest
+
+from web.webquerytest import WebQueryTest
+
+from inboxtest import InboxTest
+
+if __name__ == '__main__':
+    unittest.main()
Only in version_2/test: alltests.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/alltests.sh version_3/test/alltests.sh
--- version_2/test/alltests.sh	1970-01-01 01:00:00.000000000 +0100
+++ version_3/test/alltests.sh	2010-03-29 10:53:03.000000000 +0200
@@ -0,0 +1,27 @@
+#!/bin/bash
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+
+export PYTHONPATH=.
+python2.5 _alltests.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/_example_integrationtest.py version_3/test/_example_integrationtest.py
--- version_2/test/_example_integrationtest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_3/test/_example_integrationtest.py	2010-03-29 10:53:03.000000000 +0200
@@ -0,0 +1,160 @@
+# encoding: utf-8
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
+#       http://www.kennisnetictopschool.nl
+#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
+#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+from os import getuid
+assert getuid() != 0, "Do not run tests as 'root'"
+
+from os import system                             #DO_NOT_DISTRIBUTE
+from sys import path as sysPath                   #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')     #DO_NOT_DISTRIBUTE
+                                                  #DO_NOT_DISTRIBUTE
+from glob import glob                             #DO_NOT_DISTRIBUTE
+for path in glob('../deps.d/*'):                  #DO_NOT_DISTRIBUTE
+    sysPath.insert(0, path)                       #DO_NOT_DISTRIBUTE
+sysPath.insert(0,'..')                            #DO_NOT_DISTRIBUTE
+
+from os import system
+from sys import exit, exc_info
+
+from os.path import isdir, isfile
+
+from unittest import main
+from random import randint
+from time import time
+from glob import glob
+
+from amara.binderytools import bind_file, bind_string
+
+from weightless import Reactor
+from cq2utils import CQ2TestCase, getRequest, postRequest, wheelOfTime
+
+from merescocore.framework import be
+
+from merescocomponents.examples.dna.server import dna, config
+
+integrationTempdir = '/tmp/meresco-integration-test'
+reactor = Reactor()
+
+class IntegrationTest(CQ2TestCase):
+
+    def testExplain(self):
+        header, body = getRequest(reactor, port, '/sru', {})
+        explainResponse = body.explainResponse
+        self.assertEquals(config['host'], str(explainResponse.record.recordData.explain.serverInfo.host))
+
+        portNumber = int(explainResponse.record.recordData.explain.serverInfo.port)
+        self.assertTrue(50000 < portNumber < 60000, portNumber)
+
+    def testIndex(self):
+        self.assertSruQuery(2, 'dc="Seek You Too"')
+        self.assertSruQuery(2, 'dc.title = program')
+        self.assertSruQuery(1, 'dc.identifier="http://meresco.com?record=2"')
+
+    def testDrilldown(self):
+        result = self.doDrilldown('dc.rights="Open Source"', 'dc.subject')
+        navigator = result.extraResponseData.drilldown.term_drilldown.navigator
+
+        self.assertEquals(1, len(navigator), result.xml())
+        self.assertEquals('dc.subject', str(navigator.name))
+        self.assertEquals(2, len(navigator.item))
+        itemValues = [(item.count, str(item)) for item in navigator.item]
+        self.assertEquals([(1, 'Programming'), (1, 'Search')], itemValues)
+
+    def testRSS(self):
+        body = self._doQuery({'query': 'dc.title = program'}, path="/rss")
+        items = [(str(item.title), str(item.description), str(item.link).split('?', 1)[1]) for item in body.rss.channel.item]
+        self.assertEquals(2, len(items))
+        self.assertEquals([('Example Program 1', 'This is an example program about Search with Meresco', 'operation=searchRetrieve&version=1.1&query=dc.identifier%3Dhttp%3A//meresco.com%3Frecord%3D1'), ('Example Program 2', 'This is an example program about Programming with Meresco', 'operation=searchRetrieve&version=1.1&query=dc.identifier%3Dhttp%3A//meresco.com%3Frecord%3D2')], items)
+
+    def testOaiIdentify(self):
+        header, body = getRequest(reactor, port, '/oai', {'verb': 'Identify'})
+        self.assertEquals('HTTP/1.0 200 Ok\r\nContent-Type: text/xml; charset=utf-8', header)
+        self.assertEquals('Meresco Example Repository', body.OAI_PMH.Identify.repositoryName)
+        self.assertEquals('admin@example.org', body.OAI_PMH.Identify.adminEmail)
+
+    def testOaiListRecords(self):
+        header, body = getRequest(reactor, port, '/oai', {'verb': 'ListRecords', 'metadataPrefix': 'oai_dc'})
+        self.assertEquals('HTTP/1.0 200 Ok\r\nContent-Type: text/xml; charset=utf-8', header)
+        self.assertEquals(3, len(body.OAI_PMH.ListRecords.record))
+
+    def testDeleteRecord(self):
+        self.assertSruQuery(0, 'dc.identifier="http://meresco.com?record=3"')
+        header, body = getRequest(reactor, port, '/oai', {'verb': 'ListRecords', 'metadataPrefix': 'oai_dc'})
+        self.assertEquals('deleted', body.OAI_PMH.ListRecords.record[2].header.status)
+
+    def doDrilldown(self, query, drilldownField):
+        message = self._doQuery({'query':query, 'x-term-drilldown': drilldownField})
+        result = message.searchRetrieveResponse
+        return result
+
+    def assertSruQuery(self, numberOfRecords, query):
+        message = self._doQuery({'query':query})
+        result = message.searchRetrieveResponse
+        self.assertEquals(numberOfRecords, int(str(result.numberOfRecords)))
+        return result
+
+    def _doQuery(self, arguments, path="/sru"):
+        queryArguments = {'version': '1.1', 'operation': 'searchRetrieve'}
+        queryArguments.update(arguments)
+        header, body = getRequest(reactor, port, path, queryArguments)
+        return body
+
+def createDatabase(port):
+    recordPacking = 'xml'
+    start = time()
+    print "Creating database in", integrationTempdir
+    sourceFiles = glob('harvester_output/*.updateRequest')
+    for updateRequestFile in sorted(sourceFiles):
+        print 'Sending:', updateRequestFile
+        header, body = postRequest(reactor, port, '/update', open(updateRequestFile).read())
+        if '200 Ok' not in header:
+            print 'No 200 Ok response, but:'
+            print header
+            exit(123)
+        if "srw:diagnostics" in body.xml():
+            print body.xml()
+            exit(1234)
+    print "Finished creating database in %s seconds" % (time() - start)
+
+if __name__ == '__main__':
+    from sys import argv
+    if not '--fast' in argv:
+        system('rm -rf ' + integrationTempdir)
+        system('mkdir --parents '+ integrationTempdir)
+
+    port = randint(50000,60000)
+    server = be(dna(reactor, config['host'], portNumber=port, databasePath=integrationTempdir))
+    server.once.observer_init()
+
+    if '--fast' in argv and isdir(integrationTempdir):
+        argv.remove('--fast')
+        print "Reusing database in", integrationTempdir
+    else:
+        createDatabase(port)
+    main()
Only in version_2/test: example_integrationtest.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/example_integrationtest.sh version_3/test/example_integrationtest.sh
--- version_2/test/example_integrationtest.sh	1970-01-01 01:00:00.000000000 +0100
+++ version_3/test/example_integrationtest.sh	2010-03-29 10:53:03.000000000 +0200
@@ -0,0 +1,27 @@
+#!/bin/bash
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+
+export PYTHONPATH=.
+python2.5 _example_integrationtest.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/facetindex/lucenetestcase.py version_3/test/facetindex/lucenetestcase.py
--- version_2/test/facetindex/lucenetestcase.py	2010-03-29 09:51:46.000000000 +0200
+++ version_3/test/facetindex/lucenetestcase.py	2010-03-29 10:53:03.000000000 +0200
@@ -33,6 +33,8 @@
 from cq2utils import CQ2TestCase
 from merescocomponents.facetindex import DocSet
 from os.path import join, isdir
+from os import getlogin
+from tempfile import gettempdir
 
 class LuceneTestCase(CQ2TestCase):
 
@@ -65,7 +67,7 @@
         self.reader = IndexReader.open(self.tempdir)
         self.searcher = IndexSearcher(self.reader % IndexReader)
 
-    def createBigIndex(self, size, valuemax=1000, log=False, keepas=''):
+    def createBigIndex(self, size, valuemax=1000, log=False, indexName=None):
         def create(directory):
             from random import randint
             index = IndexWriter(directory, merescoStandardAnalyzer, True)
@@ -77,8 +79,14 @@
                         Field.Store.NO, Field.Index.UN_TOKENIZED) % Fieldable)
                 index.addDocument(doc)
             index.close()
-        directory = keepas if keepas else self.tempdir
+        directory = self.getDir(indexName)
         if not IndexReader.indexExists(directory):
             create(directory)
         self.reader = IndexReader.open(directory)
         self.searcher = IndexSearcher(self.reader % IndexReader)
+
+    def getDir(self, indexName):
+        if indexName:
+            return join(gettempdir(), 'meresco-components-%s' % getlogin(), indexName) 
+        return self.tempdir
+        
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/facetindex/performancetuningtest.py version_3/test/facetindex/performancetuningtest.py
--- version_2/test/facetindex/performancetuningtest.py	2010-03-29 09:51:46.000000000 +0200
+++ version_3/test/facetindex/performancetuningtest.py	2010-03-29 10:53:03.000000000 +0200
@@ -149,14 +149,14 @@
         self.assertTiming(0.002, tdisp2, 0.005) # zipper/upper_bound optimization 2
 
     def testNoMemoryLeaksInTermCardinalities(self):
-        self.createBigIndex(9, 2, keepas='testMemoryLeaks') # 10 records, 6 values
+        self.createBigIndex(9, 2, indexName='testMemoryLeaks') # 10 records, 6 values
         dsl = DocSetList.forField(self.reader, 'field0')
         for i in range(100000):
             cs = dsl.termCardinalities(DocSet([1,2,3,4,5,6,7,8,9])).next()
         self.assertNoMemoryLeaks(bandwidth=0.9)
 
     def testPerformanceOfDocSetListForField(self):
-        self.createBigIndex(size=10000, keepas='testIndex0')
+        self.createBigIndex(size=10000, indexName='testIndex0')
         t = 0.0
         for n in range(10):
             for field in iterJ(self.reader.getFieldNames(IndexReader.FieldOption.ALL)):
Only in version_2/test: __init__.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/_performancetests.py version_3/test/_performancetests.py
--- version_2/test/_performancetests.py	1970-01-01 01:00:00.000000000 +0100
+++ version_3/test/_performancetests.py	2010-03-29 10:53:03.000000000 +0200
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
+#       http://www.kennisnetictopschool.nl
+#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+from os import getuid
+assert getuid() != 0, "Do not run tests as 'root'"
+
+from os import system                             #DO_NOT_DISTRIBUTE
+from sys import path as sysPath                   #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')     #DO_NOT_DISTRIBUTE
+                                                  #DO_NOT_DISTRIBUTE
+from glob import glob                             #DO_NOT_DISTRIBUTE
+for path in glob('../deps.d/*'):                  #DO_NOT_DISTRIBUTE
+    sysPath.insert(0, path)                       #DO_NOT_DISTRIBUTE
+sysPath.insert(0,'..')                            #DO_NOT_DISTRIBUTE
+
+import unittest
+
+from facetindex.performancetuningtest import PerformanceTuningTest
+
+if __name__ == '__main__':
+    unittest.main()
Only in version_2/test: performancetests.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/performancetests.sh version_3/test/performancetests.sh
--- version_2/test/performancetests.sh	1970-01-01 01:00:00.000000000 +0100
+++ version_3/test/performancetests.sh	2010-03-29 10:53:03.000000000 +0200
@@ -0,0 +1,27 @@
+#!/bin/bash
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+
+export PYTHONPATH=.
+python2.5 _performancetests.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_2/test/sitecustomize.py version_3/test/sitecustomize.py
--- version_2/test/sitecustomize.py	1970-01-01 01:00:00.000000000 +0100
+++ version_3/test/sitecustomize.py	2010-03-29 10:53:03.000000000 +0200
@@ -0,0 +1,25 @@
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+from sys import setdefaultencoding
+setdefaultencoding('utf-8')
