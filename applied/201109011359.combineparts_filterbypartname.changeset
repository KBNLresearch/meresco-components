Changeset created on Thu Sep 01 13:59:38 CET 2011 by Seecr (Seek You Too B.V.)

Description: Added CombineParts and FilterByPartName component

    New CombineParts component to combine multiple parts in your oai-response
    FilterByPartName yields records only for the given parts

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.17-Edurep/version_0

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/combineparts.py version_1/meresco/components/combineparts.py
--- version_0/meresco/components/combineparts.py	1970-01-01 01:00:00.000000000 +0100
+++ version_1/meresco/components/combineparts.py	2011-08-23 16:46:58.000000000 +0200
@@ -0,0 +1,57 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+from xml.sax.saxutils import escape as xmlEscape
+
+class CombineParts(Observable):
+    def __init__(self, combinations, allowMissingParts=None):
+        Observable.__init__(self)
+        self._combinations = combinations
+        self._allowMissingParts = allowMissingParts or []
+
+    def yieldRecord(self, identifier, partname):
+        if not partname in self._combinations.keys():
+            yield self.all.yieldRecord(identifier=identifier, partname=partname)
+            return
+
+        substuff = []
+        for subpart in self._combinations[partname]:
+            subgenerator = self.all.yieldRecord(identifier=identifier, partname=subpart)
+            try: 
+                substuff.append((subpart, subgenerator.next(), subgenerator))
+            except IOError:
+                if subpart not in self._allowMissingParts:
+                    raise
+
+        yield '<doc:document xmlns:doc="http://meresco.org/namespace/harvester/document">' 
+        for subpart, firstResult, remaining in substuff:
+            yield '<doc:part name="%s">' % xmlEscape(subpart)
+            yield firstResult
+            yield remaining
+            yield '</doc:part>'
+        yield '</doc:document>'
+
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/filterpartbyname.py version_1/meresco/components/filterpartbyname.py
--- version_0/meresco/components/filterpartbyname.py	1970-01-01 01:00:00.000000000 +0100
+++ version_1/meresco/components/filterpartbyname.py	2011-08-09 13:33:20.000000000 +0200
@@ -0,0 +1,42 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2006-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2006-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+
+class FilterPartByName(Observable):
+    def __init__(self, included=None, excluded=None):
+        Observable.__init__(self)
+        if included and excluded or not (included or excluded):
+            raise ValueError("Use included OR excluded")
+        if included:
+            self._allowed = lambda partname: partname in included
+        else:
+            self._allowed = lambda partname: not partname in excluded
+
+    def yieldRecord(self, identifier, partname):
+        if self._allowed(partname):
+            yield self.all.yieldRecord(identifier=identifier, partname=partname)
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/__init__.py version_1/meresco/components/__init__.py
--- version_0/meresco/components/__init__.py	2011-08-09 11:49:57.000000000 +0200
+++ version_1/meresco/components/__init__.py	2011-08-18 16:55:21.000000000 +0200
@@ -57,3 +59,5 @@
 from berkeleydict import DoubleUniqueBerkeleyDict, BerkeleyDict
 from inbox import Inbox
 from multileveldrilldown import MultiLevelDrilldown, MultiLevelDrilldownException
+from filterpartbyname import FilterPartByName
+from combineparts import CombineParts
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/sru/sruhandler.py version_1/meresco/components/sru/sruhandler.py
--- version_0/meresco/components/sru/sruhandler.py	2011-08-09 11:49:57.000000000 +0200
+++ version_1/meresco/components/sru/sruhandler.py	2011-08-10 11:38:20.000000000 +0200
@@ -1,31 +1,33 @@
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
-#    Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from xml.sax.saxutils import quoteattr, escape as xmlEscape
 
 from meresco.core import Observable, decorate, decorateWith
@@ -162,7 +164,7 @@
         yield '</srw:extraRecordData>'
 
     def _yieldRecordForRecordPacking(self, recordId=None, recordSchema=None, recordPacking=None):
-        generator = compose(self.all.yieldRecord(recordId, recordSchema))
+        generator = compose(self.all.yieldRecord(identifier=recordId, partname=recordSchema))
         if recordPacking == 'xml':
             for data in generator:
                 yield data
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/_alltests.py version_1/test/_alltests.py
--- version_0/test/_alltests.py	2011-08-09 11:49:57.000000000 +0200
+++ version_1/test/_alltests.py	2011-08-18 16:53:50.000000000 +0200
@@ -45,16 +46,18 @@
 
 from berkeleydicttest import DoubleUniqueBerkeleyDictTest, BerkeleyDictTest
 from contextsettest import ContextSetTest
+from combinepartstest import CombinePartsTest
 from cqlconversiontest import CQLConversionTest
 from crosswalktest import CrosswalkTest
 from fieldletstest import FieldletsTest
 from fields2xmltest import Fields2XmlTest
 from filelisttest import FileListTest
+from filterpartbynametest import FilterPartByNameTest
 from inboxtest import InboxTest
 from multileveldrilldowntest import MultiLevelDrilldownTest
 from packertest import PackerTest
 from parsecqltest import ParseCQLTest
 from periodicdownloadtest import PeriodicDownloadTest
 from persistentsortedintegerlisttest import PersistentSortedIntegerListTest
 from reindextest import ReindexTest
 from renamecqlindextest import RenameCqlIndexTest
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/combinepartstest.py version_1/test/combinepartstest.py
--- version_0/test/combinepartstest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_1/test/combinepartstest.py	2011-08-23 16:47:22.000000000 +0200
@@ -0,0 +1,83 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from cq2utils import CallTrace
+from unittest import TestCase
+from meresco.components import CombineParts
+from weightless.core import compose
+
+class CombinePartsTest(TestCase):
+    def setUp(self):
+        TestCase.setUp(self)
+        self.combine = CombineParts({'together':['one', 'two']})
+        self.observer = CallTrace('observer')
+        self.combine.addObserver(self.observer)
+        self.observer.methods['yieldRecord'] = lambda identifier, partname: (f for f in ['<%s/>' % partname])
+
+    def testPassThroughOtherStuff(self):
+        result = list(compose(self.combine.yieldRecord(identifier='identifier', partname='partname')))
+        self.assertEquals(['<partname/>'], result)
+        self.assertEquals(['yieldRecord'], [m.name for m in self.observer.calledMethods])
+        self.assertEquals([dict(identifier='identifier', partname='partname')], [m.kwargs for m in self.observer.calledMethods])
+
+    def testTogether(self):
+        result = ''.join(compose(self.combine.yieldRecord(identifier='identifier', partname='together')))
+        self.assertEquals('<doc:document xmlns:doc="http://meresco.org/namespace/harvester/document"><doc:part name="one"><one/></doc:part><doc:part name="two"><two/></doc:part></doc:document>', result)
+
+        self.assertEquals(['yieldRecord', 'yieldRecord'], [m.name for m in self.observer.calledMethods])
+        self.assertEquals([dict(identifier='identifier', partname='one'), dict(identifier='identifier', partname='two')], [m.kwargs for m in self.observer.calledMethods])
+
+    def testTogetherWithOnePartMissingAllowed(self):
+        self.combine = CombineParts({'together':['one', 'two']}, allowMissingParts=['two'])
+        self.combine.addObserver(self.observer)
+        def yieldRecord(identifier, partname):
+            if partname == 'two': 
+                raise IOError('two')
+            yield '<%s/>' % partname
+        self.observer.methods['yieldRecord'] = yieldRecord
+        result = ''.join(compose(self.combine.yieldRecord(identifier='identifier', partname='together')))
+        self.assertEquals('<doc:document xmlns:doc="http://meresco.org/namespace/harvester/document"><doc:part name="one"><one/></doc:part></doc:document>', result)
+
+    def testTogetherWithOnePartMissingNotAllowed(self):
+        def yieldRecord(identifier, partname):
+            if partname == 'two': 
+                raise IOError('two')
+            yield '<%s/>' % partname
+        self.observer.methods['yieldRecord'] = yieldRecord
+        generator = compose(self.combine.yieldRecord(identifier='identifier', partname='together'))
+        self.assertRaises(IOError, generator.next)
+
+    def testTogetherWithGivenMissingPartsAllowed(self):
+        self.combine = CombineParts({'together':['one', 'two']}, allowMissingParts=['two'])
+        self.combine.addObserver(self.observer)
+        def yieldRecord(identifier, partname):
+            if partname == 'one': 
+                raise IOError('one')
+            yield '<%s/>' % partname
+        self.observer.methods['yieldRecord'] = yieldRecord
+        generator = compose(self.combine.yieldRecord(identifier='identifier', partname='together'))
+        self.assertRaises(IOError, generator.next)
+
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/filterpartbynametest.py version_1/test/filterpartbynametest.py
--- version_0/test/filterpartbynametest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_1/test/filterpartbynametest.py	2011-08-09 13:33:20.000000000 +0200
@@ -0,0 +1,52 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from cq2utils import CallTrace
+from unittest import TestCase
+from meresco.components import FilterPartByName
+from weightless.core import compose
+
+class FilterPartByNameTest(TestCase):
+    def testFilterIncluded(self):
+        filter = FilterPartByName(included=['thisone'])
+        observer = CallTrace('observer')
+        observer.methods['yieldRecord'] = lambda **kwargs: (f for f in ['data'])
+        filter.addObserver(observer)
+
+        self.assertEquals(['data'], list(compose(filter.yieldRecord(identifier='identifier', partname='thisone'))))
+        self.assertEquals([], list(compose(filter.yieldRecord(identifier='identifier', partname='no'))))
+
+    def testFilterExcluded(self):
+        filter = FilterPartByName(excluded=['thisone'])
+        observer = CallTrace('observer')
+        observer.methods['yieldRecord'] = lambda **kwargs: (f for f in ['data'])
+        filter.addObserver(observer)
+
+        self.assertEquals([], list(compose(filter.yieldRecord(identifier='identifier', partname='thisone'))))
+        self.assertEquals(['data'], list(compose(filter.yieldRecord(identifier='identifier', partname='no'))))
+    
+    def testFilter(self):
+        self.assertRaises(ValueError, FilterPartByName)
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/sru/sruhandlertest.py version_1/test/sru/sruhandlertest.py
--- version_0/test/sru/sruhandlertest.py	2011-08-09 11:49:56.000000000 +0200
+++ version_1/test/sru/sruhandlertest.py	2011-08-10 11:38:20.000000000 +0200
@@ -1,31 +1,32 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
-#    Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from meresco.components.sru.sruparser import MANDATORY_PARAMETER_NOT_SUPPLIED, UNSUPPORTED_PARAMETER, UNSUPPORTED_VERSION, UNSUPPORTED_OPERATION, UNSUPPORTED_PARAMETER_VALUE, QUERY_FEATURE_UNSUPPORTED, SruException
@@ -152,9 +153,9 @@
         observer.returnValues['executeCQL'] = (100, range(11, 13))
 
         yieldRecordCalls = []
-        def yieldRecord(recordId, recordSchema):
+        def yieldRecord(identifier, partname):
             yieldRecordCalls.append(1)
-            yield "<MOCKED_WRITTEN_DATA>%s-%s</MOCKED_WRITTEN_DATA>" % (recordId, recordSchema)
+            yield "<MOCKED_WRITTEN_DATA>%s-%s</MOCKED_WRITTEN_DATA>" % (identifier, partname)
         observer.yieldRecord = yieldRecord
 
         observer.returnValues['extraResponseData'] = 'extraResponseData'
@@ -240,9 +241,9 @@
         observer.returnValues['executeCQL'] = (100, range(11, 13))
 
         yieldRecordCalls = []
-        def yieldRecord(recordId, recordSchema):
+        def yieldRecord(identifier, partname):
             yieldRecordCalls.append(1)
-            yield "<MOCKED_WRITTEN_DATA>%s-%s</MOCKED_WRITTEN_DATA>" % (recordId, recordSchema)
+            yield "<MOCKED_WRITTEN_DATA>%s-%s</MOCKED_WRITTEN_DATA>" % (identifier, partname)
         observer.yieldRecord = yieldRecord
 
         observer.returnValues['extraResponseData'] = 'extraResponseData'
@@ -344,9 +345,9 @@
         observer.returnValues['executeCQL'] = (100, [11])
 
         yieldRecordCalls = []
-        def yieldRecord(recordId, recordSchema):
+        def yieldRecord(identifier, partname):
             yieldRecordCalls.append(1)
-            yield "<MOCKED_WRITTEN_DATA>%s-%s</MOCKED_WRITTEN_DATA>" % (recordId, recordSchema)
+            yield "<MOCKED_WRITTEN_DATA>%s-%s</MOCKED_WRITTEN_DATA>" % (identifier, partname)
         observer.yieldRecord = yieldRecord
 
         observer.returnValues['extraResponseData'] = 'extraResponseData'
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/sru/srwtest.py version_1/test/sru/srwtest.py
--- version_0/test/sru/srwtest.py	2011-08-09 11:49:56.000000000 +0200
+++ version_1/test/sru/srwtest.py	2011-08-10 11:38:20.000000000 +0200
@@ -1,29 +1,31 @@
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+# Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from cq2utils import CQ2TestCase, CallTrace
@@ -142,7 +144,7 @@
                 'executeCQL': (1, ['recordId']),
             },
             methods={
-                'yieldRecord': lambda recordId, recordSchema: (g for g in ["<DATA>%s-%s</DATA>" % (recordId, recordSchema)])
+                'yieldRecord': lambda identifier, partname: (g for g in ["<DATA>%s-%s</DATA>" % (identifier, partname)])
             },
             ignoredAttributes=['unknown', 'extraResponseData', 'echoedExtraRequestData'])
 
@@ -183,7 +185,7 @@
                 'executeCQL': (1, ['recordId']),
             },
             methods={
-                'yieldRecord': lambda recordId, recordSchema: (g for g in ["<DATA>%s-%s</DATA>" % (recordId, recordSchema)])
+                'yieldRecord': lambda identifier, partname: (g for g in ["<DATA>%s-%s</DATA>" % (identifier, partname)])
             },
             ignoredAttributes=['unknown', 'extraResponseData', 'echoedExtraRequestData'])
         self.sruHandler.addObserver(observer)
@@ -212,7 +214,7 @@
         observer = CallTrace(
             returnValues={
                 'executeCQL': (1, [1]),
-                'yieldRecord': lambda recordId, recordSchema: (g for g in ["<DATA>%s-%s</DATA>" % (recordId, recordSchema)])
+                'yieldRecord': lambda identifier, partname: (g for g in ["<DATA>%s-%s</DATA>" % (identifier, partname)])
             },
             ignoredAttributes=['unknown', 'extraResponseData', 'echoedExtraRequestData'])
 
