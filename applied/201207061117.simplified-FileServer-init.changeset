Changeset created on Fri Jul 06 11:17:02 UTC 2012 by Seecr (Seek You Too B.V.)

Description: simplified FileServer.__init__ 

    Dropped 'documentRoots' argument again from FileServer.__init__. 
    (Previous 'explicit' API made it too easy to make parameter mistake 
    that only failed 'silently'.)

Baseline version: 4.0.19

From 0d0e6d24266f8dda3c5116f0a17c2ae7e8bfb825 Mon Sep 17 00:00:00 2001
From: Jurjan-Paul Medema <jurjanpaul@cq2.nl>
Date: Fri, 6 Jul 2012 12:13:06 +0200
Subject: [PATCH 1/3] JPM: allow for list argument (instead of 'silently' failing)

---
 meresco/components/http/fileserver.py |    4 +++-
 test/http/fileservertest.py           |    3 ++-
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/meresco/components/http/fileserver.py b/meresco/components/http/fileserver.py
index dd0b569..41979c4 100644
--- a/meresco/components/http/fileserver.py
+++ b/meresco/components/http/fileserver.py
@@ -82,7 +82,9 @@ class FileServer(object):
     def __init__(self, documentRoot=None, documentRoots=None):
         if not any([documentRoot, documentRoots]) or all([documentRoot, documentRoots]):
             raise ValueError("Specify either 'documentRoot' or 'documentRoots'.")
-        self._documentRoots = documentRoots or [documentRoot]
+        self._documentRoots = documentRoot or documentRoots
+        if hasattr(self._documentRoots, 'endswith'):
+            self._documentRoots = [self._documentRoots]
 
     def handleRequest(self, path, port=None, Client=None, Method=None, Headers=None, **kwargs):
         file = self._findFile(path)
diff --git a/test/http/fileservertest.py b/test/http/fileservertest.py
index 6d4ccd6..d89e50d 100644
--- a/test/http/fileservertest.py
+++ b/test/http/fileservertest.py
@@ -57,6 +57,7 @@ class FileServerTest(TestCase):
         FileServer(self.directory)
         FileServer(documentRoot=self.directory)
         FileServer(documentRoots=[self.directory, self.directory2])
+        FileServer([self.directory, self.directory2])
 
     def testServeNotExistingFile(self):
         fileServer = FileServer(self.directory)
@@ -65,7 +66,7 @@ class FileServerTest(TestCase):
         self.assertTrue("<title>404 Not Found</title>" in response)
 
     def testFindFile(self):
-        server = FileServer(documentRoots=[self.directory, self.directory2])
+        server = FileServer([self.directory, self.directory2])
         self.assertFalse(server._findFile("/filename"))
         self.assertFalse(server._findFile("/"))
 
-- 
1.7.2.3


From 015752b3a9fc53e29c347cb1563b3be083c27637 Mon Sep 17 00:00:00 2001
From: Jurjan-Paul Medema <jurjanpaul@cq2.nl>
Date: Fri, 6 Jul 2012 12:16:00 +0200
Subject: [PATCH 2/3] "Created changeset FileServer accepts list argument"

---
 ...1014.FileServer accepts list argument.changeset |   58 ++++++++++++++++++++
 1 files changed, 58 insertions(+), 0 deletions(-)
 create mode 100644 applied/201207061014.FileServer accepts list argument.changeset

diff --git a/applied/201207061014.FileServer accepts list argument.changeset b/applied/201207061014.FileServer accepts list argument.changeset
new file mode 100644
index 0000000..cba8686
--- /dev/null
+++ b/applied/201207061014.FileServer accepts list argument.changeset	
@@ -0,0 +1,58 @@
+Changeset created on Fri Jul 06 10:14:54 UTC 2012 by Seecr (Seek You Too B.V.)
+
+Description: FileServer accepts list argument
+
+    Specifying a list argument without keyword failed silently. 
+    Now allowing for it after all.
+
+Baseline version: 4.0.19
+
+From 0d0e6d24266f8dda3c5116f0a17c2ae7e8bfb825 Mon Sep 17 00:00:00 2001
+From: Jurjan-Paul Medema <jurjanpaul@cq2.nl>
+Date: Fri, 6 Jul 2012 12:13:06 +0200
+Subject: [PATCH] JPM: allow for list argument (instead of 'silently' failing)
+
+---
+ meresco/components/http/fileserver.py |    4 +++-
+ test/http/fileservertest.py           |    3 ++-
+ 2 files changed, 5 insertions(+), 2 deletions(-)
+
+diff --git a/meresco/components/http/fileserver.py b/meresco/components/http/fileserver.py
+index dd0b569..41979c4 100644
+--- a/meresco/components/http/fileserver.py
++++ b/meresco/components/http/fileserver.py
+@@ -82,7 +82,9 @@ class FileServer(object):
+     def __init__(self, documentRoot=None, documentRoots=None):
+         if not any([documentRoot, documentRoots]) or all([documentRoot, documentRoots]):
+             raise ValueError("Specify either 'documentRoot' or 'documentRoots'.")
+-        self._documentRoots = documentRoots or [documentRoot]
++        self._documentRoots = documentRoot or documentRoots
++        if hasattr(self._documentRoots, 'endswith'):
++            self._documentRoots = [self._documentRoots]
+ 
+     def handleRequest(self, path, port=None, Client=None, Method=None, Headers=None, **kwargs):
+         file = self._findFile(path)
+diff --git a/test/http/fileservertest.py b/test/http/fileservertest.py
+index 6d4ccd6..d89e50d 100644
+--- a/test/http/fileservertest.py
++++ b/test/http/fileservertest.py
+@@ -57,6 +57,7 @@ class FileServerTest(TestCase):
+         FileServer(self.directory)
+         FileServer(documentRoot=self.directory)
+         FileServer(documentRoots=[self.directory, self.directory2])
++        FileServer([self.directory, self.directory2])
+ 
+     def testServeNotExistingFile(self):
+         fileServer = FileServer(self.directory)
+@@ -65,7 +66,7 @@ class FileServerTest(TestCase):
+         self.assertTrue("<title>404 Not Found</title>" in response)
+ 
+     def testFindFile(self):
+-        server = FileServer(documentRoots=[self.directory, self.directory2])
++        server = FileServer([self.directory, self.directory2])
+         self.assertFalse(server._findFile("/filename"))
+         self.assertFalse(server._findFile("/"))
+ 
+-- 
+1.7.2.3
+
-- 
1.7.2.3


From 9d2861a7b610fd347b9c24aa39059a405692c661 Mon Sep 17 00:00:00 2001
From: Jurjan-Paul Medema <jurjanpaul@cq2.nl>
Date: Fri, 6 Jul 2012 13:14:01 +0200
Subject: [PATCH 3/3] JPM: simplified FileServer.__init__ once more

---
 ...1014.FileServer accepts list argument.changeset |   58 --------------------
 meresco/components/http/fileserver.py              |   10 ++--
 test/http/fileservertest.py                        |   12 ++--
 3 files changed, 10 insertions(+), 70 deletions(-)
 delete mode 100644 applied/201207061014.FileServer accepts list argument.changeset

diff --git a/applied/201207061014.FileServer accepts list argument.changeset b/applied/201207061014.FileServer accepts list argument.changeset
deleted file mode 100644
index cba8686..0000000
--- a/applied/201207061014.FileServer accepts list argument.changeset	
+++ /dev/null
@@ -1,58 +0,0 @@
-Changeset created on Fri Jul 06 10:14:54 UTC 2012 by Seecr (Seek You Too B.V.)
-
-Description: FileServer accepts list argument
-
-    Specifying a list argument without keyword failed silently. 
-    Now allowing for it after all.
-
-Baseline version: 4.0.19
-
-From 0d0e6d24266f8dda3c5116f0a17c2ae7e8bfb825 Mon Sep 17 00:00:00 2001
-From: Jurjan-Paul Medema <jurjanpaul@cq2.nl>
-Date: Fri, 6 Jul 2012 12:13:06 +0200
-Subject: [PATCH] JPM: allow for list argument (instead of 'silently' failing)
-
----
- meresco/components/http/fileserver.py |    4 +++-
- test/http/fileservertest.py           |    3 ++-
- 2 files changed, 5 insertions(+), 2 deletions(-)
-
-diff --git a/meresco/components/http/fileserver.py b/meresco/components/http/fileserver.py
-index dd0b569..41979c4 100644
---- a/meresco/components/http/fileserver.py
-+++ b/meresco/components/http/fileserver.py
-@@ -82,7 +82,9 @@ class FileServer(object):
-     def __init__(self, documentRoot=None, documentRoots=None):
-         if not any([documentRoot, documentRoots]) or all([documentRoot, documentRoots]):
-             raise ValueError("Specify either 'documentRoot' or 'documentRoots'.")
--        self._documentRoots = documentRoots or [documentRoot]
-+        self._documentRoots = documentRoot or documentRoots
-+        if hasattr(self._documentRoots, 'endswith'):
-+            self._documentRoots = [self._documentRoots]
- 
-     def handleRequest(self, path, port=None, Client=None, Method=None, Headers=None, **kwargs):
-         file = self._findFile(path)
-diff --git a/test/http/fileservertest.py b/test/http/fileservertest.py
-index 6d4ccd6..d89e50d 100644
---- a/test/http/fileservertest.py
-+++ b/test/http/fileservertest.py
-@@ -57,6 +57,7 @@ class FileServerTest(TestCase):
-         FileServer(self.directory)
-         FileServer(documentRoot=self.directory)
-         FileServer(documentRoots=[self.directory, self.directory2])
-+        FileServer([self.directory, self.directory2])
- 
-     def testServeNotExistingFile(self):
-         fileServer = FileServer(self.directory)
-@@ -65,7 +66,7 @@ class FileServerTest(TestCase):
-         self.assertTrue("<title>404 Not Found</title>" in response)
- 
-     def testFindFile(self):
--        server = FileServer(documentRoots=[self.directory, self.directory2])
-+        server = FileServer([self.directory, self.directory2])
-         self.assertFalse(server._findFile("/filename"))
-         self.assertFalse(server._findFile("/"))
- 
--- 
-1.7.2.3
-
diff --git a/meresco/components/http/fileserver.py b/meresco/components/http/fileserver.py
index 41979c4..d1eeb4f 100644
--- a/meresco/components/http/fileserver.py
+++ b/meresco/components/http/fileserver.py
@@ -79,12 +79,10 @@ class File(object):
 
 
 class FileServer(object):
-    def __init__(self, documentRoot=None, documentRoots=None):
-        if not any([documentRoot, documentRoots]) or all([documentRoot, documentRoots]):
-            raise ValueError("Specify either 'documentRoot' or 'documentRoots'.")
-        self._documentRoots = documentRoot or documentRoots
-        if hasattr(self._documentRoots, 'endswith'):
-            self._documentRoots = [self._documentRoots]
+    def __init__(self, documentRoot):
+        self._documentRoots = documentRoot
+        if hasattr(documentRoot, 'endswith'):
+            self._documentRoots = [documentRoot]
 
     def handleRequest(self, path, port=None, Client=None, Method=None, Headers=None, **kwargs):
         file = self._findFile(path)
diff --git a/test/http/fileservertest.py b/test/http/fileservertest.py
index d89e50d..5d4214a 100644
--- a/test/http/fileservertest.py
+++ b/test/http/fileservertest.py
@@ -51,12 +51,12 @@ class FileServerTest(TestCase):
         rmtree(self.directory)
         rmtree(self.directory2)
 
-    def testEitherDocumentRootOrDocumentRoots(self):
-        self.assertRaises(ValueError, lambda: FileServer())
-        self.assertRaises(ValueError, lambda: FileServer(self.directory, self.directory2))
+    def testInit(self):
+        self.assertRaises(TypeError, lambda: FileServer())
+        self.assertRaises(TypeError, lambda: FileServer(self.directory, self.directory2))
         FileServer(self.directory)
         FileServer(documentRoot=self.directory)
-        FileServer(documentRoots=[self.directory, self.directory2])
+        FileServer(documentRoot=[self.directory, self.directory2])
         FileServer([self.directory, self.directory2])
 
     def testServeNotExistingFile(self):
@@ -99,12 +99,12 @@ class FileServerTest(TestCase):
         f = open(join(self.directory, 'someFile'), 'w').write("Some Contents")
         f = open(join(self.directory2, 'someFile'), 'w').write("Different Contents")
 
-        fileServer = FileServer(documentRoots=[self.directory, self.directory2])
+        fileServer = FileServer(documentRoot=[self.directory, self.directory2])
         response = ''.join(compose(fileServer.handleRequest(port=80, Client=('localhost', 9000), path="/someFile", Method="GET", Headers={})))
         self.assertTrue("Some Contents" in response)
         self.assertFalse("Different Contents" in response)
 
-        fileServer = FileServer(documentRoots=[self.directory2, self.directory])
+        fileServer = FileServer(documentRoot=[self.directory2, self.directory])
         response = ''.join(compose(fileServer.handleRequest(port=80, Client=('localhost', 9000), path="/someFile", Method="GET", Headers={})))
         self.assertTrue("Different Contents" in response)
         self.assertFalse("Some Contents" in response)
-- 
1.7.2.3

