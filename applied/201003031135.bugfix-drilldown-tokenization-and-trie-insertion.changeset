Changeset created on Wed Mar  3 11:35:50 CET 2010 by Seek You Too

Description: Adds tokenization to drilldown fields and fixed a bug in trie for adding one-character strings

    Drilldown fields can now be tokenized using the same tokenizer as for full text fields.  This is DNA configurable.
    The Trie did not add short strings properly.  Adding "xy" and then "x" would not register the value for "x". 
    This could lead to hard to find duplicate fields of one character in drilldown indexes.
    This changeset is only compatible for version 2.21.

Baseline version: meresco-components/workingsets/2.21.4-TUD/version_4

diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/document.py version_4-bugfix-drilldown/merescocomponents/facetindex/document.py
--- version_4/merescocomponents/facetindex/document.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/document.py	2010-03-03 11:30:12.000000000 +0100
@@ -6,9 +6,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -46,6 +46,7 @@
         self._document = LuceneDocument()
         self._document.add(Field(IDFIELD, anId, Field.Store.YES, Field.Index.UN_TOKENIZED))
         self._fields = [IDFIELD]
+        self._tokenizedFields = []
 
     def _isValidFieldValue(self, anObject):
         return isinstance(anObject, basestring) and anObject.strip()
@@ -65,6 +66,8 @@
 
         self._addIndexedField(aKey, aValue, tokenize)
         self._fields.append(aKey)
+        if tokenize and not aKey in self._tokenizedFields:
+            self._tokenizedFields.append(aKey)
 
     def _addIndexedField(self, aKey, aValue, tokenize = True):
         self._document.add(Field(aKey,
@@ -90,5 +93,8 @@
                 dictionary[key].append(field.stringValue())
         return dictionary
 
+    def tokenizedFields(self):
+        return self._tokenizedFields
+
     def __repr__(self):
         return repr(self.asDict())
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/drilldown.py version_4-bugfix-drilldown/merescocomponents/facetindex/drilldown.py
--- version_4/merescocomponents/facetindex/drilldown.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/drilldown.py	2010-03-03 11:30:07.000000000 +0100
@@ -6,9 +6,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -38,6 +38,7 @@
 
 IndexReader_FieldOption_ALL = IndexReader.FieldOption.ALL
 
+from lucene import tokenize
 
 class NoFacetIndexException(Exception):
 
@@ -50,7 +51,7 @@
 
 class Drilldown(object):
 
-    def __init__(self, staticDrilldownFieldnames=None, transactionName=None):
+    def __init__(self, staticDrilldownFieldnames=None, transactionName=None, tokenize=None):
         self._staticDrilldownFieldnames = staticDrilldownFieldnames
         self._actualDrilldownFieldnames = self._staticDrilldownFieldnames
         self._docsetlists = {}
@@ -58,6 +59,7 @@
             self._docsetlists = dict((fieldname, DocSetList()) for fieldname in self._staticDrilldownFieldnames)
         self._commandQueue = []
         self._transactionName = transactionName
+        self._tokenize = tokenize if tokenize else []
 
     def _add(self, docId, docDict):
         keys = docDict.keys()
@@ -65,15 +67,24 @@
             for fieldname in keys
                 if fieldname in self._actualDrilldownFieldnames)
         for fieldname in fieldnames:
-            self._docsetlists[fieldname].addDocument(docId, docDict[fieldname])
+            values = docDict[fieldname]
+            if fieldname in self._tokenize:
+                values = tokenize(docDict[fieldname])
+            self._docsetlists[fieldname].addDocument(docId, values)
 
         compoundFields = (field for field in self._actualDrilldownFieldnames if type(field) == tuple)
         values = defaultdict(set)
         for field in compoundFields:
             for fieldname in field:
-                if fieldname in keys:
-                    for i in docDict[fieldname]:
-                        values[field].add(i)
+                if not fieldname in keys:
+                    continue
+                
+                for value in docDict[fieldname]:
+                    if field in self._tokenize:
+                        for token in tokenize(value):
+                            values[field].add(token)
+                    else:
+                        values[field].add(value)
         for field, value in values.items():
             self._docsetlists[field].addDocument(docId, value)
 
@@ -117,7 +128,8 @@
             if type(fieldname) == tuple:
                 self._docsetlists[fieldname] = DocSetList()
                 for field in fieldname:
-                    self._docsetlists[fieldname].merge(self._docSetListFromTermEnumForField(field, indexReader, docIdMapping))
+                    dsl = self._docSetListFromTermEnumForField(field, indexReader, docIdMapping)
+                    self._docsetlists[fieldname].merge(dsl)
             else:
                 self._docsetlists[fieldname] = self._docSetListFromTermEnumForField(fieldname, indexReader, docIdMapping)
 
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/lucene.py version_4-bugfix-drilldown/merescocomponents/facetindex/lucene.py
--- version_4/merescocomponents/facetindex/lucene.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/lucene.py	2010-03-03 11:30:43.000000000 +0100
@@ -6,9 +6,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -33,6 +33,7 @@
 from PyLucene import IndexReader, IndexWriter, IndexSearcher, StandardAnalyzer, Term, Field, TermQuery, Sort,  StandardTokenizer, StandardFilter, LowerCaseFilter, QueryFilter
 from time import time
 from itertools import ifilter, islice
+from StringIO import StringIO
 
 from document import IDFIELD
 from merescocore.framework import Observable
@@ -50,6 +51,17 @@
     def tokenStream(self, fieldName, reader):
         return LowerCaseFilter(StandardFilter(StandardTokenizer(reader)))
 
+def tokenize(aString):
+    analyzer = IncludeStopWordAnalyzer()
+    ts = analyzer.tokenStream('ignored fieldname', StringIO(unicode(aString)))
+    tokens = []
+    
+    token = ts.next()
+    while token != None:
+        tokens.append(token.termText())
+        token = ts.next()
+    return tokens
+
 class _Logger(object):
     def comment(self, *strings):
         self.writeLine('# ', *strings)
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/trie_c.cpp version_4-bugfix-drilldown/merescocomponents/facetindex/trie_c.cpp
--- version_4/merescocomponents/facetindex/trie_c.cpp	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/trie_c.cpp	2010-03-03 11:25:43.000000000 +0100
@@ -5,9 +5,9 @@
  *     Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
  *     Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
  *        http://www.kennisnetictopschool.nl
- *     Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+ *     Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
  *     Copyright (C) 2009 Tilburg University http://www.uvt.nl
- *     Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+ *     Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
  *
  *     This file is part of Meresco Components.
  *
@@ -42,7 +42,6 @@
 /************** for TESTING ****************/
 extern "C" {
 #include "integerlist.h"
-
     StringPool stringPoolForTesting;
     guint32 TrieNode_getValue2(fwPtr node, char *str) {
         return TrieNode_getValue(node, str, &stringPoolForTesting);
@@ -60,7 +59,6 @@
 }
 /*********** End for Testing ******************/
 
-
 void TrieNode_init(void);
 void LeafNode_init(void);
 void StringNode_init(void);
@@ -182,9 +180,12 @@
 }
 
 inline void ListNode_addValue(fwPtr self, guint32 value, stringNr term, StringPool* pool) {
+    if (*pool->get(term) == '\0') { 
+        ListNode_state(self)->value = value;
+        return;
+    }
     ListNodeState* me = ListNode_state(self);
     if (me->size > LISTSIZE) {
-        printf("ListNode_addValue(): Ignoring new string '%s'\n", pool->get(term));
         return;
     }
 
@@ -278,8 +279,16 @@
     fwPtr last = me->first;
     while ( ! isNone(last) ) {
         ListItem* plast = ListItem_state(last);
+        printf("plast = %p\n", plast);
         for(int i=0;i<indent; i++) printf(" ");
+        printf("begin plats->aString=%d \n", plast->aString);
+        printf("pool: %p\n", pool->get(0));
+        printf("pool: %p\n", pool->get(1));
+        printf("pool: %p\n", pool->get(2));
+        printf("pool: %p\n", pool->get(3));
+        printf("begin pool-get(plats->aString=%d)=%p \n", plast->aString, pool->get(plast->aString));
         printf("  %s:%d\n", pool->get(plast->aString), plast->value);
+        printf("klaar\n");
         last = ListItem_state(last)->next;
     }
 }
@@ -452,8 +461,7 @@
             interface(child)->free(child);
             child = ListNode_create(fwValueNone);
             ListNode_addValue(child, value, string, pool);
-        }
-        else if (isList(child)) {
+        } else if (isList(child)) {
             if ( ! ListNode_hasRoom(child) ) {
                 guint32 value = ListNode_getValue(child, (char*) "", pool);
                 fwPtr newNode = TrieNode_create(value);
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/_triedict.cpp version_4-bugfix-drilldown/merescocomponents/facetindex/_triedict.cpp
--- version_4/merescocomponents/facetindex/_triedict.cpp	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/_triedict.cpp	2010-03-03 11:25:51.000000000 +0100
@@ -5,9 +5,9 @@
  *     Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
  *     Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
  *        http://www.kennisnetictopschool.nl
- *     Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+ *     Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
  *     Copyright (C) 2009 Tilburg University http://www.uvt.nl
- *     Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+ *     Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
  *
  *     This file is part of Meresco Components.
  *
@@ -36,12 +36,16 @@
     return globalStringPool.measure() + measureall() /* from TrieNode */;
 }
 
-TrieDict::TrieDict(): termPool(&globalStringPool) {
+TrieDict::TrieDict(int uselocalpool): termPool(&globalStringPool) {
+    if (uselocalpool)
+        this->termPool = new StringPool();
     termIndex = TrieNode_create(fwValueNone);
 }
 
 TrieDict::~TrieDict() {
     TrieNode_free(termIndex);
+    if (termPool != &globalStringPool)
+        delete termPool;
 }
 
 termid TrieDict::add(char* term, value value) {
@@ -65,14 +69,26 @@
     return this->termPool->get(termId);
 }
 
+void TrieDict::printit() {
+    TrieNode_printit(termIndex, 0, termPool);
+}
+
 void TrieDict::nodecount(void) {
     nodecount();
 }
 
 
 // ########### C Wrappers #############
-TrieDict* TrieDict_create(void) {
-    return new TrieDict();
+guint32 TrieDict_add(TrieDict* trieDict, char* term, value value) {
+    return trieDict->add(term, value);
+}
+
+value TrieDict_getValue(TrieDict* trieDict, char* term) {
+    return trieDict->getValue(term);
+}
+
+TrieDict* TrieDict_create(int uselocalpool) {
+    return new TrieDict(uselocalpool);
 }
 
 void TrieDict_delete(TrieDict* trieDict) {
@@ -83,4 +99,7 @@
     self->valuesForPrefix(prefix, maxResults, result);
 }
 
+void TrieDict_printit(TrieDict* trieDict) {
+    trieDict->printit();
+}
 
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/triedict.h version_4-bugfix-drilldown/merescocomponents/facetindex/triedict.h
--- version_4/merescocomponents/facetindex/triedict.h	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/triedict.h	2010-03-03 11:26:08.000000000 +0100
@@ -5,9 +5,9 @@
  *     Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
  *     Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
  *        http://www.kennisnetictopschool.nl
- *     Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+ *     Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
  *     Copyright (C) 2009 Tilburg University http://www.uvt.nl
- *     Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+ *     Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
  *
  *     This file is part of Meresco Components.
  *
@@ -47,7 +47,7 @@
         fwPtr termIndex;
         StringPool* termPool;
     public:
-        TrieDict(void);
+        TrieDict(int uselocalpool = 0);
         ~TrieDict(void);
         int                measure(void) {
             return sizeof(this); // excluding global termPool and TrieNodes, use TrieNode_measureall()
@@ -56,12 +56,16 @@
         value              getValue(char* term);
         void               valuesForPrefix(char* prefix, guint32 maxResults, IntegerList* result);
         char*              getTerm(termid termId);
+        void               printit();
         void               nodecount(void);
 };
 extern "C" {
-    TrieDict*              TrieDict_create(void);
+    termid                 TrieDict_add(TrieDict*, char* term, value value);
+    value                  TrieDict_getValue(TrieDict*, char* term);
+    TrieDict*              TrieDict_create(int uselocalpool = 0);
     void                   TrieDict_delete(TrieDict*);
     void                   TrieDict_valuesForPrefix(TrieDict* self, char* prefix, guint32 maxResults, IntegerList* result);
     int                    TrieDict_measureall(void);
+    void                   TrieDict_printit(TrieDict*);
 }
 #endif
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/triedict.py version_4-bugfix-drilldown/merescocomponents/facetindex/triedict.py
--- version_4/merescocomponents/facetindex/triedict.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/triedict.py	2010-03-03 11:26:19.000000000 +0100
@@ -5,9 +5,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -28,13 +28,13 @@
 ## end license ##
 
 from libfacetindex import libFacetIndex
-from ctypes import POINTER
+from ctypes import POINTER, c_char_p, c_uint32, c_int
 from cq2utils import deallocator
 
 TRIEDICT = POINTER(None)
 
 TrieDict_create = libFacetIndex.TrieDict_create
-TrieDict_create.argtypes = []
+TrieDict_create.argtypes = [c_int]
 TrieDict_create.restype = TRIEDICT
 
 TrieDict_delete = libFacetIndex.TrieDict_delete
@@ -45,13 +45,35 @@
 TrieDict_measureall.argtypes = None
 TrieDict_measureall.restype = int
 
+TrieDict_add = libFacetIndex.TrieDict_add
+TrieDict_add.argtypes = [TRIEDICT, c_char_p, c_uint32]
+TrieDict_add.restype = c_uint32
+
+TrieDict_getValue = libFacetIndex.TrieDict_getValue
+TrieDict_getValue.argtypes = [TRIEDICT, c_char_p]
+TrieDict_getValue.restype = c_uint32
+
+TrieDict_printit = libFacetIndex.TrieDict_printit
+TrieDict_printit.argtypes = [TRIEDICT]
+TrieDict_printit.restype = None
+
 class TrieDict(object):
 
     @classmethod
     def measureall(clazz):
         return TrieDict_measureall()
 
-    def __init__(self):
-        self._cobj = TrieDict_create()
+    def __init__(self, uselocalpool=0):
+        self._cobj = TrieDict_create(uselocalpool)
         self._dealloc = deallocator(TrieDict_delete, self._cobj)
         self._as_parameter_ = self._cobj
+
+    def add(self, term, value):
+        return TrieDict_add(self, term, value)
+    
+    def getValue(self, term):
+        return TrieDict_getValue(self, term)
+
+    def printit(self):
+        return TrieDict_printit(self)
+
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/merescocomponents/facetindex/trie.py version_4-bugfix-drilldown/merescocomponents/facetindex/trie.py
--- version_4/merescocomponents/facetindex/trie.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/merescocomponents/facetindex/trie.py	2010-03-03 11:26:00.000000000 +0100
@@ -5,9 +5,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -63,7 +63,7 @@
 TrieNode_getValues2.argtypes = [ fwPtr, c_char_p, c_uint32, INTEGERLIST ]
 TrieNode_getValues2.restype = None
 
-TrieNode_printit2 = lib.TrieNode_printit
+TrieNode_printit2 = lib.TrieNode_printit2
 TrieNode_printit2.argtypes = [ fwPtr, c_int ]
 TrieNode_printit2.restype = None
 
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/setup.py version_4-bugfix-drilldown/setup.py
--- version_4/setup.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/setup.py	2010-03-03 11:32:06.000000000 +0100
@@ -6,9 +6,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -55,6 +55,7 @@
                       'merescocomponents/facetindex/_stringpool.cpp',
                   ],
                   extra_compile_args = [
+                      '-g', 
                       '-I/usr/include/glib-2.0',
                       '-I/usr/lib/glib-2.0/include',
                   ],
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/test/facetindex/documenttest.py version_4-bugfix-drilldown/test/facetindex/documenttest.py
--- version_4/test/facetindex/documenttest.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/test/facetindex/documenttest.py	2010-03-03 11:31:29.000000000 +0100
@@ -6,9 +6,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -101,3 +101,15 @@
         d.addIndexedField('field', 'value1')
         d.addIndexedField('field', 'value2')
         self.assertEquals({'__id__': ['1234'], 'field': ['value1', 'value2']}, d.asDict())
+        
+    def testTokenizedFields(self):
+        d = Document('1234')
+        self.assertEquals([], d.tokenizedFields())
+        
+        d.addIndexedField('field1', 'value1')
+        d.addIndexedField('field2', 'value2.1')
+        self.assertEquals(['field1', 'field2'], d.tokenizedFields())
+        
+        d.addIndexedField('field2', 'value2.2')
+        self.assertEquals(['field1', 'field2'], d.tokenizedFields())
+        
\ No newline at end of file
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/test/facetindex/drilldowntest.py version_4-bugfix-drilldown/test/facetindex/drilldowntest.py
--- version_4/test/facetindex/drilldowntest.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/test/facetindex/drilldowntest.py	2010-03-03 11:32:26.000000000 +0100
@@ -6,9 +6,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -408,3 +408,16 @@
             64: {'dictionaries':1360889,'postings':8, 'terms':7, 'fields':3, 'totalBytes':628}
         }
         self.assertEquals(results[machineBits], measure)
+        
+    def testTokenize(self):
+        drilldown = Drilldown(['tokenized', 'untokenized', ('tokenized', 'untokenized')], tokenize=['tokenized', ('tokenized', 'untokenized')])
+        drilldown.addDocument(0, {'tokenized': ['token one'], 'untokenized': ['token two']})
+        drilldown.addDocument(1, {'tokenized': ['token two'], 'untokenized': ['token two']})
+        drilldown.commit()
+        self.assertEquals([('token', 2), ('one', 1), ('two', 1)], list(drilldown._docsetlists['tokenized'].allCardinalities()))
+        self.assertEquals(
+            [('token two', 2)], 
+            list(drilldown._docsetlists['untokenized'].allCardinalities()))
+        self.assertEquals(
+            set([('token', 2), ('one', 1), ('two', 2)]), 
+            set(drilldown._docsetlists[('tokenized', 'untokenized')].allCardinalities()))
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/test/facetindex/lucenetest.py version_4-bugfix-drilldown/test/facetindex/lucenetest.py
--- version_4/test/facetindex/lucenetest.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/test/facetindex/lucenetest.py	2010-03-03 11:32:52.000000000 +0100
@@ -6,9 +6,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -44,6 +44,8 @@
 
 from weightless import Reactor
 
+from merescocomponents.facetindex.lucene import tokenize
+
 class LuceneTest(CQ2TestCase):
 
     def setUp(self):
@@ -58,6 +60,17 @@
         self.assertEquals(os.path.isdir(self.tempdir), True)
         self.assertTrue(IndexReader.indexExists(self.tempdir))
 
+    def testTokenize(self):
+        self.assertEquals([], tokenize(''))
+        self.assertEquals(['token'], tokenize('token'))
+        self.assertEquals(['token'], tokenize('TOKEN'))
+        self.assertEquals(['token'], tokenize('token.'))
+        self.assertEquals(['token'], tokenize("token's"))
+        self.assertEquals(['token'], tokenize('t.o.k.e.n.'))
+        self.assertEquals(['this', 'is', 'a', 'text'], tokenize('This is a text.'))
+        
+        
+
     def testAddToIndex(self):
         myDocument = Document('0123456789')
         myDocument.addIndexedField('title', 'een titel')
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/test/facetindex/triedicttest.py version_4-bugfix-drilldown/test/facetindex/triedicttest.py
--- version_4/test/facetindex/triedicttest.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/test/facetindex/triedicttest.py	2010-03-03 11:33:13.000000000 +0100
@@ -5,9 +5,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -34,4 +34,33 @@
 class TrieDictTest(TestCase):
     def testConstructor(self):
         t = TrieDict()
-    
\ No newline at end of file
+        
+    def testAddWords(self):
+        t = TrieDict(uselocalpool=1)
+        termId1 = t.add('xy', 1)
+        termId2 = t.add('y', 1)
+        self.assertEquals(termId1, t.add('xy', 1))
+        self.assertEquals(termId2, t.add('y', 1))
+
+    def testAddWords2(self):
+        t = TrieDict(uselocalpool=1)
+        termId1 = t.add('xy', 8)
+        termId2 = t.add('x', 6)
+        self.assertEquals(8, t.getValue('xy'))
+        self.assertEquals(6, t.getValue('x'))
+        self.assertEquals(termId1, t.add('xy', 1))
+        self.assertEquals(termId2, t.add('x', 1))
+        
+    def testAddWords3(self):
+        t = TrieDict(uselocalpool=1)
+        termId1 = t.add('x', 1)
+        termId2 = t.add('xy', 1)
+        
+        self.assertEquals(termId1, t.add('x', 1))
+        self.assertEquals(termId2, t.add('xy', 1))
+        
+    def testAddAndGet(self):
+        t = TrieDict(uselocalpool=1)
+        self.assertEquals(0xffffffff, t.getValue('q'))
+        t.add('q', 1)
+        self.assertEquals(1, t.getValue('q'))        
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_4/test/facetindex/trietest.py version_4-bugfix-drilldown/test/facetindex/trietest.py
--- version_4/test/facetindex/trietest.py	2010-02-24 11:14:27.000000000 +0100
+++ version_4-bugfix-drilldown/test/facetindex/trietest.py	2010-03-03 11:25:33.000000000 +0100
@@ -5,9 +5,9 @@
 #    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -129,7 +129,6 @@
         trie.add(5, "z1-meer")
         trie.add(6, "z2-spul")
         trie.add(7, "z3-enzo")
-        #trie.printit()
         self.assertEquals(range(8), trie.getValues(""))
         self.assertEquals(range(4), trie.getValues("prefix"))
         self.assertEquals([0], trie.getValues("prefix-0"))
@@ -206,3 +205,9 @@
         self.assertEquals(2, trie.getValue('aaa'))
         self.assertEquals(1, trie.getValue('aa'))
         self.assertEquals(0, trie.getValue('a'))
+        
+    def testOneCharacter(self):
+        trie = Trie()
+        trie.add(42, 'aa')
+        trie.add(87, 'a')
+        self.assertEquals(87, trie.getValue('a'))
