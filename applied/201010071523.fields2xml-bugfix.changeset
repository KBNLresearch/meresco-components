Changeset created on Thu Oct  7 15:23:14 CEST 2010 by Seek You Too

Description: Bugfix Fields2Xml for partly same keys

    Fields2Xml generated invalid xml for keys that are partly the same,
    like 'key.sub' and 'keyname.othersub', it generated xml that looked
    like <key><sub>data</sub><name><othersub>data</othersub></key>.

    This bug is solved with this changeset.

Baseline version: meresco/meresco-components/workingsets/3.3-Edurep/version_4

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_4/meresco/components/fields2xml.py version_5/meresco/components/fields2xml.py
--- version_4/meresco/components/fields2xml.py	2010-10-06 15:22:52.000000000 +0200
+++ version_5/meresco/components/fields2xml.py	2010-10-07 15:22:49.000000000 +0200
@@ -7,6 +7,7 @@
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -53,35 +54,21 @@
         xml = '<%s%s>%s</%s>' % (self._partName, ns, generateXml(self._fields), self._partName)
 
         identifier = self._resourceManager.ctx.tx.locals['id']
-        self._resourceManager.do.store(identifier, self._partName, xml)
+        self._resourceManager.do.add(identifier, self._partName, xml)
 
 def splitName(name):
     result = name.split('.')
     return '//' + '/'.join(result[:-1]), result[-1]
 
 def _generateXml(fields):
-    currentPath = '//'
-    for name, value in fields:
-        for namePart in name.split('.'):
-            if not correctNameRe.match(namePart):
-                raise Fields2XmlException('Invalid name: "%s"' % name)
-
-        parentPath, tagName = splitName(name)
-        while parentPath != currentPath:
-            if currentPath in parentPath:
-                parentTagsToAdd = [tag for tag in parentPath[len(currentPath):].split('/') if tag]
-                for tag in parentTagsToAdd:
-                    yield '<%s>' % tag
-                currentPath = parentPath
-            else:
-                tag = currentPath.split('/')[-1]
-                currentPath = '/'.join(currentPath.split('/')[:-1])
-                yield '</%s>' % tag
-        yield '<%s>%s</%s>' % (tagName, escapeXml(value), tagName)
-    if currentPath != '//':
-        parentTagsToRemove = currentPath[len('//'):].split('/')
-        for tag in reversed(parentTagsToRemove):
-            yield '</%s>' % tag
+    for (key, value) in fields:
+        tags = key.split('.')
+        for tag in tags:
+            if not correctNameRe.match(tag):                                
+                raise Fields2XmlException('Invalid key: "%s"' % key)
+        yield ''.join("<%s>" % tag for tag in tags)
+        yield escapeXml(value)
+        yield ''.join("</%s>" % tag for tag in reversed(tags))
 
 def generateXml(fields):
     return ''.join(_generateXml(fields))
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_4/test/fields2xmltest.py version_5/test/fields2xmltest.py
--- version_4/test/fields2xmltest.py	2010-10-04 11:09:01.000000000 +0200
+++ version_5/test/fields2xmltest.py	2010-10-07 15:22:49.000000000 +0200
@@ -7,6 +7,7 @@
 #    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -31,6 +32,8 @@
 from meresco.components import Fields2XmlTx
 from meresco.components.fields2xml import Fields2XmlException, generateXml
 from amara.binderytools import bind_string
+from StringIO import StringIO
+from lxml.etree import parse
 
 class Fields2XmlTest(CQ2TestCase):
     def testOne(self):
@@ -48,7 +51,7 @@
         f.addField('key.sub', 'value')
         f.commit()
 
-        self.assertEquals(['store'], [m.name for m in transactionDo.calledMethods])
+        self.assertEquals(['add'], [m.name for m in transactionDo.calledMethods])
         self.assertEquals(('identifier', 'extra', '<extra><key><sub>value</sub></key></extra>'), transactionDo.calledMethods[0].args)
 
     def testPartNameIsDefinedAtInitialization(self):
@@ -100,14 +103,11 @@
     def testGenerateOneSubKeyXml(self):
         self.assertEquals('<key><sub>value</sub></key>', generateXml([('key.sub','value')]))
    
-    def testGenerateTwoSubKeyXml(self):
-        self.assertEquals('<key><sub>value</sub><sub2>value2</sub2></key>', generateXml([('key.sub','value'), ('key.sub2','value2')]))
-
     def testGenerateOtherParentKeyXml(self):
         self.assertEquals('<a><b>value</b></a><c><d>value2</d></c>', generateXml([('a.b','value'), ('c.d','value2')]))
 
     def testGenerateXml(self):
-        self.assertEquals('<a><b><c><d>DDD</d><e>EEE</e></c><c>CCC</c><f>FFF</f><c><d>DDD</d></c></b></a>', generateXml([('a.b.c.d','DDD'), ('a.b.c.e','EEE'), ('a.b.c', 'CCC'),('a.b.f', 'FFF'), ('a.b.c.d', 'DDD')]))
+        self.assertEquals('<a><b><c><d>DDD</d></c></b></a><a><b><c><e>EEE</e></c></b></a><a><b><c>CCC</c></b></a><a><b><f>FFF</f></b></a><a><b><c><d>DDD</d></c></b></a>', generateXml([('a.b.c.d','DDD'), ('a.b.c.e','EEE'), ('a.b.c', 'CCC'),('a.b.f', 'FFF'), ('a.b.c.d', 'DDD')]))
 
     def testEscapeTagNamesAndValues(self):
         try:
@@ -118,4 +118,14 @@
 
 
         self.assertEquals('<key>&lt;/tag&gt;</key>', generateXml([('key','</tag>')]))
-        
+
+    def testEscapeCorrectly(self):
+        fields = [
+               ( 'vuur.aap' , 'normal' ),
+               ( 'vuurboom.aap' , 'normal' ),
+            ]
+        x = '<root>%s</root>' % generateXml(fields)
+        self.assertEquals("<root><vuur><aap>normal</aap></vuur><vuurboom><aap>normal</aap></vuurboom></root>", x)
+
+
+
