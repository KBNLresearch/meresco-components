Changeset created on Thu Oct 14 12:56:12 CEST 2010 by Seek You Too

Description: Fileserver's Expires header calculation simplified

    The http FileServer Expires (and Date) headers calculation has
    been simplified and more thoroughly tested.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.2-CQ2/version_0

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_0/meresco/components/http/fileserver.py version_1/meresco/components/http/fileserver.py
--- version_0/meresco/components/http/fileserver.py	2010-10-13 14:43:08.000000000 +0200
+++ version_1/meresco/components/http/fileserver.py	2010-10-14 12:50:57.000000000 +0200
@@ -27,7 +27,7 @@
 ## end license ##
 from os.path import isfile, join, normpath, commonprefix
 from rfc822 import formatdate
-from time import mktime, gmtime, timezone
+from time import time
 from stat import ST_MTIME
 from os import stat
 
@@ -71,7 +71,7 @@
         fp.close()
 
     def _date(self, offset=0):
-        return formatdate(mktime(gmtime()) - timezone + offset)
+        return formatdate(time() + offset)
 
 class FileServer(object):
     def __init__(self, documentRoot):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_0/test/http/fileservertest.py version_1/test/http/fileservertest.py
--- version_0/test/http/fileservertest.py	2010-10-13 14:43:02.000000000 +0200
+++ version_1/test/http/fileservertest.py	2010-10-14 12:50:57.000000000 +0200
@@ -31,6 +31,9 @@
 from shutil import rmtree
 from tempfile import mkdtemp
 from os import remove, makedirs
+from time import time
+from rfc822 import parsedate
+from calendar import timegm
 
 from meresco.components.http.fileserver import FileServer
 
@@ -84,10 +87,17 @@
 
         fileServer = FileServer(self.directory)
         response = ''.join(fileServer.handleRequest(port=80, Client=('localhost', 9000), path="/someFile", Method="GET", Headers={}))
+        headers, body = response.split("\r\n\r\n")
 
-        self.assertTrue("Date: " in response)
-        self.assertTrue("Last-Modified: " in response)
-        self.assertTrue("Expires: " in response)
+        self.assertTrue("Date: " in headers)
+        self.assertTrue("Last-Modified: " in headers)
+        self.assertTrue("Expires: " in headers)
+
+        headerValues = dict(tuple(a.strip() for a in line.split(':', 1)) for line in headers.split('\r\n') if ':' in line)
+        date = timegm(parsedate(headerValues['Date']))
+        expires = timegm(parsedate(headerValues['Expires']))
+        self.assertTrue(1 > time() - date > 0, time() - date)
+        self.assertTrue(61 * 60 > expires - date > 59 * 60, expires - date)
 
     def testPathShouldBeInDocumentRoot(self):
         documentRoot = join(self.directory, 'documentRoot')
