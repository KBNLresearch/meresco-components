Changeset created on Tue Feb  1 20:29:46 CET 2011 by Seek You Too

Description: srw:record in srw:extraRecordData

    Extra recordData returned in SRU/W responses didn't have a namespace,
    and therefor was in "default" namespace. See the following example.
    
    Old style:
    <srw:record>
      <srw:recordSchema>dc</srw:recordSchema>
      <srw:recordPacking>xml</srw:recordPacking>
      <srw:recordData>
        ..
      </srw:recordData>
      <srw:extraRecordData>
        <recordData recordSchema="extra"> <!-- no namespace -->
          ..
        </recordData>
      </srw:extraRecordData>
    </srw:record>

    The SruHandler can now be configured to return extraRecordData as a
    srw:record. See the following example:

    New style:
    <srw:record>
      <srw:recordSchema>dc</srw:recordSchema>
      <srw:recordPacking>xml</srw:recordPacking>
      <srw:recordData>
        ..
      </srw:recordData>
      <srw:extraRecordData>
        <srw:record>
          <srw:recordSchema>extra</srw:recordSchema>
          <srw:recordPacking>xml</srw:recordPacking>
          <srw:recordData>
          ..
          </srw:recordData>
        </srw:record>
      </srw:extraRecordData>
    </srw:record>

    To avoid backwards incompatibility the old version is still available.

Baseline version: meresco-components/tags/version_3.4.6

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_0/meresco/components/sru/sruhandler.py version_1/meresco/components/sru/sruhandler.py
--- version_0/meresco/components/sru/sruhandler.py	2011-01-27 13:52:37.000000000 +0100
+++ version_1/meresco/components/sru/sruhandler.py	2011-02-01 20:28:32.000000000 +0100
@@ -32,12 +32,19 @@
 
 from cqlparser import parseString as parseCQL
 from weightless import compose
+from warnings import warn
 
 from sruparser import DIAGNOSTICS, DIAGNOSTIC, GENERAL_SYSTEM_ERROR, QUERY_FEATURE_UNSUPPORTED, RESPONSE_HEADER, RESPONSE_FOOTER
 
 ECHOED_PARAMETER_NAMES = ['version', 'query', 'startRecord', 'maximumRecords', 'recordPacking', 'recordSchema', 'recordXPath', 'resultSetTTL', 'sortKeys', 'stylesheet', 'x-recordSchema']
 
 class SruHandler(Observable):
+    def __init__(self, extraRecordDataNewStyle=False):
+        Observable.__init__(self)
+        self._extraRecordDataNewStyle = extraRecordDataNewStyle
+        if not extraRecordDataNewStyle:
+            warn("""Old style extraRecordData is used, this is deprecated and will be removed in the future.""", DeprecationWarning)
+
     def searchRetrieve(self, version=None, recordSchema=None, recordPacking=None, startRecord=1, maximumRecords=10, query='', sortBy=None, sortDescending=False, **kwargs):
         SRU_IS_ONE_BASED = 1
 
@@ -130,6 +137,10 @@
         except Exception, e:
             yield DIAGNOSTIC % tuple(GENERAL_SYSTEM_ERROR + [xmlEscape(str(e))])
 
+    def _writeOldStyleExtraRecordData(self, schema, recordPacking, recordId):
+        yield '<recordData recordSchema="%s">' % xmlEscape(schema)
+        yield self._catchErrors(self._yieldRecordForRecordPacking(recordId, schema, recordPacking), schema, recordId)
+        yield '</recordData>'
 
     def _writeExtraRecordData(self, x_recordSchema=None, recordPacking=None, recordId=None, **kwargs):
         if not x_recordSchema:
@@ -137,9 +148,16 @@
 
         yield '<srw:extraRecordData>'
         for schema in x_recordSchema:
-            yield '<recordData recordSchema="%s">' % xmlEscape(schema)
+            if not self._extraRecordDataNewStyle:
+                yield self._writeOldStyleExtraRecordData(schema, recordPacking, recordId)
+                continue
+            yield '<srw:record>'
+            yield '<srw:recordSchema>%s</srw:recordSchema>' % xmlEscape(schema)
+            yield '<srw:recordPacking>%s</srw:recordPacking>' % recordPacking
+            yield '<srw:recordData>'
             yield self._catchErrors(self._yieldRecordForRecordPacking(recordId, schema, recordPacking), schema, recordId)
-            yield '</recordData>'
+            yield '</srw:recordData>'
+            yield '</srw:record>'
         yield '</srw:extraRecordData>'
 
     def _yieldRecordForRecordPacking(self, recordId=None, recordSchema=None, recordPacking=None):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_0/test/sru/sruhandlertest.py version_1/test/sru/sruhandlertest.py
--- version_0/test/sru/sruhandlertest.py	2011-01-27 13:52:37.000000000 +0100
+++ version_1/test/sru/sruhandlertest.py	2011-02-01 20:28:32.000000000 +0100
@@ -50,7 +50,7 @@
 
     def testEchoedSearchRetrieveRequest(self):
         arguments = {'version':'1.1', 'operation':'searchRetrieve', 'query':'query >= 3', 'recordSchema':'schema', 'recordPacking':'string'}
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
 
         result = "".join(list(component._writeEchoedSearchRetrieveRequest(**arguments)))
         self.assertEqualsWS("""<srw:echoedSearchRetrieveRequest>
@@ -63,7 +63,7 @@
     def testEchoedSearchRetrieveRequestWithExtraRequestData(self):
         arguments = {'version':'1.1', 'operation':'searchRetrieve', 'query':'query >= 3', 'recordSchema':'schema', 'recordPacking':'string', 'x_term_drilldown':['field0,field1']}
         observer = CallTrace('ExtraRequestData', returnValues={'echoedExtraRequestData': '<some>extra request data</some>'})
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(SRUTermDrilldown())
         component.addObserver(observer)
 
@@ -81,7 +81,7 @@
 </srw:echoedSearchRetrieveRequest>""" % drilldownRequestData, result)
 
     def testExtraResponseDataHandlerNoHandler(self):
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         result = "".join(list(component._writeExtraResponseData(cqlAbstractSyntaxTree=None)))
         self.assertEquals('' , result)
 
@@ -90,7 +90,7 @@
             def extraResponseData(self, *args, **kwargs):
                 return (f for f in [])
 
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(TestHandler())
         result = "".join(list(component._writeExtraResponseData(cqlAbstractSyntaxTree=None)))
         self.assertEquals('' , result)
@@ -104,7 +104,7 @@
                 kwargsUsed.append(kwargs)
                 return (f for f in ["<someD", "ata/>"])
 
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(TestHandler())
         result = "".join(list(component._writeExtraResponseData(cqlAbstractSyntaxTree=None)))
         self.assertEquals('<srw:extraResponseData><someData/></srw:extraResponseData>' , result)
@@ -134,7 +134,7 @@
         observer.returnValues['extraResponseData'] = 'extraResponseData'
         observer.returnValues['echoedExtraRequestData'] = 'echoedExtraRequestData'
 
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(observer)
 
         result = "".join(compose(component.searchRetrieve(startRecord=11, maximumRecords=15, query='query', recordPacking='string', recordSchema='schema')))
@@ -159,7 +159,7 @@
         observer.returnValues['extraResponseData'] = 'extraResponseData'
         observer.returnValues['echoedExtraRequestData'] = 'echoedExtraRequestData'
 
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(observer)
 
         result = "".join(compose(component.searchRetrieve(**arguments)))
@@ -176,12 +176,20 @@
                 <MOCKED_WRITTEN_DATA>11-schema</MOCKED_WRITTEN_DATA>
             </srw:recordData>
             <srw:extraRecordData>
-                <recordData recordSchema="extra">
+                <srw:record>
+                    <srw:recordSchema>extra</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>11-extra</MOCKED_WRITTEN_DATA>
-                </recordData>
-                <recordData recordSchema="evenmore">
+                    </srw:recordData>
+                </srw:record>
+                <srw:record>
+                    <srw:recordSchema>evenmore</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>11-evenmore</MOCKED_WRITTEN_DATA>
-                </recordData>
+                    </srw:recordData>
+                </srw:record>
             </srw:extraRecordData>
         </srw:record>
         <srw:record>
@@ -191,12 +199,20 @@
                 <MOCKED_WRITTEN_DATA>12-schema</MOCKED_WRITTEN_DATA>
             </srw:recordData>
             <srw:extraRecordData>
-                <recordData recordSchema="extra">
+                <srw:record>
+                    <srw:recordSchema>extra</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>12-extra</MOCKED_WRITTEN_DATA>
-                </recordData>
-                <recordData recordSchema="evenmore">
+                    </srw:recordData>
+                </srw:record>
+                <srw:record>
+                    <srw:recordSchema>evenmore</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>12-evenmore</MOCKED_WRITTEN_DATA>
-                </recordData>
+                    </srw:recordData>
+                </srw:record>
             </srw:extraRecordData>
         </srw:record>
     </srw:records>
@@ -231,7 +247,7 @@
         observer.returnValues['extraResponseData'] = 'extraResponseData'
         observer.returnValues['echoedExtraRequestData'] = 'echoedExtraRequestData'
 
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(observer)
 
         result = "".join(compose(component.searchRetrieve(**arguments)))
@@ -258,12 +274,20 @@
                 <MOCKED_WRITTEN_DATA>11-schema</MOCKED_WRITTEN_DATA>
             </srw:recordData>
             <srw:extraRecordData>
-                <recordData recordSchema="extra">
+                <srw:record>
+                    <srw:recordSchema>extra</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>11-extra</MOCKED_WRITTEN_DATA>
-                </recordData>
-                <recordData recordSchema="evenmore">
+                    </srw:recordData>
+                </srw:record>
+                <srw:record>
+                    <srw:recordSchema>evenmore</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>11-evenmore</MOCKED_WRITTEN_DATA>
-                </recordData>
+                    </srw:recordData>
+                </srw:record>
             </srw:extraRecordData>
         </srw:record>
         <srw:record>
@@ -274,12 +298,20 @@
                 <MOCKED_WRITTEN_DATA>12-schema</MOCKED_WRITTEN_DATA>
             </srw:recordData>
             <srw:extraRecordData>
-                <recordData recordSchema="extra">
+                <srw:record>
+                    <srw:recordSchema>extra</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>12-extra</MOCKED_WRITTEN_DATA>
-                </recordData>
-                <recordData recordSchema="evenmore">
+                    </srw:recordData>
+                </srw:record>
+                <srw:record>
+                    <srw:recordSchema>evenmore</srw:recordSchema>
+                    <srw:recordPacking>xml</srw:recordPacking>
+                    <srw:recordData>
                     <MOCKED_WRITTEN_DATA>12-evenmore</MOCKED_WRITTEN_DATA>
-                </recordData>
+                    </srw:recordData>
+                </srw:record>
             </srw:extraRecordData>
         </srw:record>
     </srw:records>
@@ -304,10 +336,47 @@
         self.assertEquals((), extraResponseDataMethod.args)
         self.assertEquals(set(['version', 'recordSchema', 'x_recordSchema', 'sortDescending', 'sortBy', 'maximumRecords', 'startRecord', 'query', 'operation', 'recordPacking', 'cqlAbstractSyntaxTree', 'docset']), set(extraResponseDataMethod.kwargs.keys()))
 
+    def testExtraRecordDataOldStyle(self):
+        arguments = {'version':'1.2', 'operation':'searchRetrieve',  'recordSchema':'schema', 'recordPacking':'xml', 'query':'field=value', 'startRecord':1, 'maximumRecords':2, 'x_recordSchema':['extra', 'evenmore']}
+
+        observer = CallTrace()
+        observer.returnValues['executeCQL'] = (100, [11])
+
+        yieldRecordCalls = []
+        def yieldRecord(recordId, recordSchema):
+            yieldRecordCalls.append(1)
+            yield "<MOCKED_WRITTEN_DATA>%s-%s</MOCKED_WRITTEN_DATA>" % (recordId, recordSchema)
+        observer.yieldRecord = yieldRecord
+
+        observer.returnValues['extraResponseData'] = 'extraResponseData'
+        observer.returnValues['echoedExtraRequestData'] = 'echoedExtraRequestData'
+        component = SruHandler(extraRecordDataNewStyle=False)
+        component.addObserver(observer)
+
+        result = "".join(compose(component.searchRetrieve(**arguments)))
+
+        strippedResult = result[result.index('<srw:record>'):result.index('</srw:records>')]
+        self.assertEqualsWS("""<srw:record>
+            <srw:recordSchema>schema</srw:recordSchema>
+            <srw:recordPacking>xml</srw:recordPacking>
+            <srw:recordIdentifier>11</srw:recordIdentifier>
+            <srw:recordData>
+                <MOCKED_WRITTEN_DATA>11-schema</MOCKED_WRITTEN_DATA>
+            </srw:recordData>
+            <srw:extraRecordData>
+                <recordData recordSchema="extra">
+                    <MOCKED_WRITTEN_DATA>11-extra</MOCKED_WRITTEN_DATA>
+                </recordData>
+                <recordData recordSchema="evenmore">
+                    <MOCKED_WRITTEN_DATA>11-evenmore</MOCKED_WRITTEN_DATA>
+                </recordData>
+            </srw:extraRecordData>
+        </srw:record>""", strippedResult)
+
     def testIOErrorInWriteRecordData(self):
         observer = CallTrace()
         observer.exceptions["yieldRecord"] = IOError()
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(observer)
         result = "".join(list(compose(component._writeRecordData(recordPacking="string", recordSchema="schema", recordId="ID"))))
         self.assertTrue("diagnostic" in result, result)
@@ -316,7 +385,7 @@
     def testExceptionInWriteRecordData(self):
         observer = CallTrace()
         observer.exceptions["yieldRecord"] = Exception("Test Exception")
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(observer)
         result = "".join(list(compose(component._writeRecordData(recordPacking="string", recordSchema="schema", recordId="ID"))))
         self.assertTrue("diagnostic" in result, result)
@@ -326,7 +395,7 @@
         class RaisesException(object):
             def extraResponseData(self, *args, **kwargs):
                 raise Exception("Test Exception")
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(RaisesException())
         result = "".join(compose(component._writeExtraResponseData(cqlAbstractSyntaxTree=None)))
         self.assertTrue("diagnostic" in result)
@@ -335,7 +404,7 @@
         class RaisesException(object):
             def executeCQL(self, *args, **kwargs):
                 raise Exception("Test Exception")
-        component = SruHandler()
+        component = SruHandler(extraRecordDataNewStyle=True)
         component.addObserver(RaisesException())
         result = "".join(compose(component.searchRetrieve(startRecord=11, maximumRecords=15, query='query', recordPacking='string', recordSchema='schema')))
         self.assertTrue("diagnostic" in result)
