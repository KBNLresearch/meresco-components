Changeset created on Thu May  5 11:07:04 CEST 2011 by Seek You Too

Description: Fieldname mapping for autocomplete

    With the fieldname mapping functionality an autocomplete component can map
    an externally exposed fieldname to an internally used fieldname. This is useful
    for mapping a fieldname to a compound drilldown field.

Baseline version: meresco-components/workingsets/3.4.7.1-TUD/version_1

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/meresco/components/autocomplete/autocomplete.py version_1-drilldown/meresco/components/autocomplete/autocomplete.py
--- version_1/meresco/components/autocomplete/autocomplete.py	2011-05-04 09:28:42.000000000 +0200
+++ version_1-drilldown/meresco/components/autocomplete/autocomplete.py	2011-05-05 11:04:32.000000000 +0200
@@ -2,8 +2,8 @@
 #
 #    Meresco Components are components to build searchengines, repositories
 #    and archives, based on Meresco Core.
-#    Copyright (C) 2009-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2011 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2009-2011 Delft University of Technology http://www.tudelft.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -36,13 +36,14 @@
     return formatdate(mktime(gmtime()) - timezone + offset)
 
 class Autocomplete(Observable):
-    def __init__(self, path, inputs, maxresults, labelMapping=None, delay=100):
+    def __init__(self, path, inputs, maxresults, labelMapping=None, fieldMapping=None, delay=100):
         Observable.__init__(self)
         self._path = path
         self._maxresults = maxresults
         self._delay = delay
         self._inputs = inputs
         self._labelMapping = labelMapping if labelMapping else {}
+        self._fieldMapping = fieldMapping if fieldMapping else {}
         self._fileServer = FileServer(documentRoot=javascriptDir)
 
     def handleRequest(self, arguments, path, **kwargs):
@@ -56,6 +57,8 @@
 
     def _prefixSearch(self, arguments):
         fieldname = arguments['fieldname'][0]
+        if fieldname in self._fieldMapping:
+            fieldname = self._fieldMapping[fieldname]
         prefix = arguments['prefix'][0]
         label = None
         if '=' in prefix:
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/test/autocomplete/autocompletetest.py version_1-drilldown/test/autocomplete/autocompletetest.py
--- version_1/test/autocomplete/autocompletetest.py	2011-05-04 09:28:42.000000000 +0200
+++ version_1-drilldown/test/autocomplete/autocompletetest.py	2011-05-05 11:04:32.000000000 +0200
@@ -3,8 +3,8 @@
 #
 #    Meresco Components are components to build searchengines, repositories
 #    and archives, based on Meresco Core.
-#    Copyright (C) 2009-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2009-2010 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009-2011 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2009-2011 Delft University of Technology http://www.tudelft.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -45,7 +45,18 @@
 </root>""", body)
         self.assertEquals(['prefixSearch'], [m.name for m in observer.calledMethods])
         self.assertEquals({'prefix':'t', 'fieldname':'field0', 'maxresults':50}, observer.calledMethods[0].kwargs)
-    
+
+    def testFieldMapping(self):
+        auto = Autocomplete(path='/some/path', maxresults=50, inputs=[('mainsearchinput', 'alias')], fieldMapping={'alias': ('field1', 'field2')})
+        observer = CallTrace('observer')
+        auto.addObserver(observer)
+        observer.returnValues['prefixSearch'] = [('term0', 1),('term<1>', 3)]
+
+        head,body = ''.join(compose(auto.handleRequest(path='/path', arguments={'prefix':['t'], 'fieldname':['alias']}))).split('\r\n'*2)
+
+        self.assertEquals(['prefixSearch'], [m.name for m in observer.calledMethods])
+        self.assertEquals({'prefix':'t', 'fieldname':('field1', 'field2'), 'maxresults':50}, observer.calledMethods[0].kwargs)
+
     def testPrefixWithLabel(self):
         auto = Autocomplete(
             path='/some/path', 
