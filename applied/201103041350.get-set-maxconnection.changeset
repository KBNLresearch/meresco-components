Changeset created on Fri Mar  4 13:50:33 CET 2011 by Seek You Too

Description: Dynamically assign max-connections

    You can dynamically change the maximum connections on the http-server

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.6-Edurep/version_4

Only in version_4: build
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_4/deps.txt version_4-get-set-maxconn-observablehttpserver/deps.txt
--- version_4/deps.txt	2011-01-06 14:29:49.000000000 +0100
+++ version_4-get-set-maxconn-observablehttpserver/deps.txt	2011-01-14 16:04:23.000000000 +0100
@@ -20,7 +20,7 @@
 python-meresco-xml (<< 1.1)
 python-storage (>=5.1.7)
 python-storage (<<5.2)
-python-weightless (>= 0.4.12)
+python-weightless (>= 0.4.14)
 python-weightless (<< 0.5)
 liblucene-core2-gcj9 (>= 2.2.0)
 liblucene-core2-gcj9 (< 2.4.0)
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_4/meresco/components/http/observablehttpserver.py version_4-get-set-maxconn-observablehttpserver/meresco/components/http/observablehttpserver.py
--- version_4/meresco/components/http/observablehttpserver.py	2011-01-06 14:29:49.000000000 +0100
+++ version_4-get-set-maxconn-observablehttpserver/meresco/components/http/observablehttpserver.py	2011-01-14 16:41:07.000000000 +0100
@@ -54,11 +54,12 @@
         root user. In other cases it will be started when initializing all observers,
         see observer_init()
         """
-        self._keepHttpServerForTestingSupport = \
+        self._httpserver = \
             HttpServer(self._reactor, self._port, self._connect,
                 timeout=self._timeout, prio=self._prio, sok=self._sok,
                 maxConnections=self._maxConnections,
                 errorHandler=self._error)
+        self._httpserver.listen()
         self._started = True
 
     def observer_init(self):
@@ -83,3 +84,5 @@
         requestArguments.update(kwargs)
         return self.all.handleRequest(**requestArguments)
 
+    def setMaxConnections(self, m):
+        self._httpserver.setMaxConnections(m)
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_4/test/http/observablehttpservertest.py version_4-get-set-maxconn-observablehttpserver/test/http/observablehttpservertest.py
--- version_4/test/http/observablehttpservertest.py	2011-01-06 14:29:49.000000000 +0100
+++ version_4-get-set-maxconn-observablehttpserver/test/http/observablehttpservertest.py	2011-01-14 16:44:37.000000000 +0100
@@ -86,11 +86,25 @@
         s = ObservableHttpServer(reactor, 1024, maxConnections=5)
         s.startServer()
 
-        acceptor = s._keepHttpServerForTestingSupport
+        acceptor = s._httpserver._acceptor
         httphandler = acceptor._sinkFactory('sok')
         errorHandler = httphandler._errorHandler
         self.assertTrue(errorHandler == s._error)
 
+    def testSetMaximumConnections(self):
+        reactor = CallTrace('Reactor')
+
+        s = ObservableHttpServer(reactor, 2048, maxConnections=5)
+        s.startServer()
+
+        httpserver = s._httpserver
+        self.assertEquals(5, httpserver._maxConnections)
+        s.setMaxConnections(6)
+        acceptor = s._httpserver
+        self.assertEquals(6, httpserver._maxConnections)
+        self.assertEquals(6, httpserver._acceptor._sinkFactory('a sink')._maxConnections)
+
+
     def testServerWithPrio(self):
         import gc, weakref
         prios = []
