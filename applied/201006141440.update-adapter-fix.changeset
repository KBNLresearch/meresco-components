Changeset created on Mon Jun 14 14:40:38 CEST 2010 by Seek You Too

Description: Fixed a small message misunderstanding between UpdateAdapter and MsgBox

    The MsgBox changed some of the parameters in the messages it sends. The UpdateAdapters will now correctly handle these parameters. The test for UpdateAdapter now uses instances of MsgBox to verify the correct behaviour.

Baseline version: meresco-components/workingsets/3.0-Edurep/version_7

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7/meresco/components/msgbox/updateadapter.py version_8/meresco/components/msgbox/updateadapter.py
--- version_7/meresco/components/msgbox/updateadapter.py	2010-06-08 18:14:30.000000000 +0200
+++ version_8/meresco/components/msgbox/updateadapter.py	2010-06-14 14:39:42.000000000 +0200
@@ -30,8 +30,8 @@
 
 class UpdateAdapterFromMsgbox(Observable):
 
-    def add(self, filename, filedata):
-        identifier, extension = filename.rsplit('.', 1)
+    def add(self, identifier, filedata):
+        identifier, extension = identifier.rsplit('.', 1)
         if extension == "delete":
             self.do.delete(identifier)
         elif extension == "add":
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7/test/msgbox/updateadaptertest.py version_8/test/msgbox/updateadaptertest.py
--- version_7/test/msgbox/updateadaptertest.py	2010-06-08 18:13:30.000000000 +0200
+++ version_8/test/msgbox/updateadaptertest.py	2010-06-14 14:39:41.000000000 +0200
@@ -23,73 +23,77 @@
 #
 ## end license ##
 
-from meresco.components.msgbox import UpdateAdapterToMsgbox, UpdateAdapterFromMsgbox
+from meresco.components.msgbox import UpdateAdapterToMsgbox, UpdateAdapterFromMsgbox, Msgbox
 from cq2utils import CallTrace, CQ2TestCase
 from lxml.etree import parse, tostring
 from StringIO import StringIO
 from os.path import basename, join
+from os import makedirs
 
 class UpdateAdapterTest(CQ2TestCase):
-    def testAddToMsgbox(self):
-        adapter = UpdateAdapterToMsgbox()
-        msgbox = CallTrace('msgbox')
-        adapter.addObserver(msgbox)
-
-        list(adapter.add('identifier', 'partName', 'data'))
+    def setUp(self):
+        CQ2TestCase.setUp(self)
+        self.indir = join(self.tempdir, 'in')
+        self.outdir = join(self.tempdir, 'out')
+        makedirs(self.indir)
+        makedirs(self.outdir)
+        self.msgbox = Msgbox('reactor', self.indir, self.outdir)
 
-        self.assertEquals(1, len(msgbox.calledMethods))
-        m = msgbox.calledMethods[0]
-        self.assertEquals('add', m.name)
-        self.assertEquals((), m.args)
-        self.assertEquals({'identifier': 'identifier.add', 'filedata': 'data'}, m.kwargs)
-
-    def testDeleteToMsgbox(self):
+    def testToAdapterAndMsgboxAdd(self):
         adapter = UpdateAdapterToMsgbox()
-        msgbox = CallTrace('msgbox')
-        adapter.addObserver(msgbox)
+        adapter.addObserver(self.msgbox)
+        
+        list(adapter.add('identifier', 'ignored-partName', 'data'))
+        
+        self.assertEquals('data', open(join(self.outdir, 'identifier.add')).read()) 
 
+    def testToAdapterAndMsgboxDelete(self):
+        adapter = UpdateAdapterToMsgbox()
+        adapter.addObserver(self.msgbox)
+        
         list(adapter.delete('identifier'))
+        
+        self.assertEquals('', open(join(self.outdir, 'identifier.delete')).read()) 
 
-        self.assertEquals(1, len(msgbox.calledMethods))
-        m = msgbox.calledMethods[0]
-        self.assertEquals('add', m.name)
-        self.assertEquals((), m.args)
-        self.assertEquals({'identifier': 'identifier.delete', 'filedata': ''}, m.kwargs)
-
-
-    def testAddFromMsgbox(self):
-        observer = CallTrace("Observer")
+    def testWrongExtension(self):
         adapter = UpdateAdapterFromMsgbox()
-        adapter.addObserver(observer)
-        filename = "identifier.add"
-        filepath = join(self.tempdir, filename)
-        xml = "<x>testRecord</x>"
-        open(filepath, 'w').write(xml)
-        filedata = open(filepath)
+        self.msgbox.addObserver(adapter)
+        self.msgbox._logError = lambda *args: None
+        open(join(self.indir, 'filename.extension'), 'w').close()
 
-        adapter.add(filename, filedata)
+        self.msgbox.processFile('filename.extension')
 
-        self.assertEquals(['add'], [m.name for m in observer.calledMethods])
-        method = observer.calledMethods[0]
-        args = method.args
-        self.assertEquals(('identifier',''), args[:2])
-        self.assertTrue(filedata is args[2])
+        errorContents = open(join(self.outdir, 'filename.extension.error')).read()
+        self.assertTrue('Expected add or delete as file extension' in errorContents, errorContents)
 
-    def testDeleteFromMsgbox(self):
-        observer = CallTrace("Observer")
+    def testMsgboxAndFromAdapterDelete(self):
         adapter = UpdateAdapterFromMsgbox()
+        observer = CallTrace('observer')
+        self.msgbox.addObserver(adapter)
         adapter.addObserver(observer)
-        filename = "identifier.delete"
-        filepath = join(self.tempdir, filename)
-        open(filepath, 'w').close()
-        file = open(filepath)
+        open(join(self.indir, 'identifier.delete'), 'w').close()
 
-        adapter.add(filename, file)
+        self.msgbox.processFile('identifier.delete')
 
         self.assertEquals(['delete'], [m.name for m in observer.calledMethods])
         self.assertEquals(('identifier',), observer.calledMethods[0].args)
 
-    def testWrongExtension(self):
+    def testMsgboxAndFromAdapterAdd(self):
         adapter = UpdateAdapterFromMsgbox()
+        observer = CallTrace('observer')
+        processAddArgs = []
+        def processAdd(identifier, partName, data):
+            processAddArgs.append((identifier, partName, data.read()))
+        observer.methods['add'] = processAdd
+        self.msgbox.addObserver(adapter)
+        adapter.addObserver(observer)
+        f = open(join(self.indir, 'identifier.add'), 'w')
+        f.write('data')
+        f.close()
+
+        self.msgbox.processFile('identifier.add')
+
+        self.assertEquals(['add'], [m.name for m in observer.calledMethods])
+        self.assertEquals([('identifier', '', 'data')], processAddArgs)
+
 
-        self.assertRaises(Exception, adapter.add, 'filename.extension', 'data')
