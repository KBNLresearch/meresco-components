Changeset created on Fri Dec 23 09:05:50 UTC 2011 by Seecr (Seek You Too B.V.)

Description: Improved slicing in IntegerList 

    Slicing is done by creating a copy of the IntegerList, also fixed a problem
    with iteration.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.25-Edurep/version_0

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/facetindex/_integerlist.cpp version_1/meresco/components/facetindex/_integerlist.cpp
--- version_0/meresco/components/facetindex/_integerlist.cpp	2011-12-23 08:56:03.000000000 +0100
+++ version_1/meresco/components/facetindex/_integerlist.cpp	2011-12-23 10:05:15.000000000 +0100
@@ -1,31 +1,32 @@
 /* begin license *
- *
- *     Meresco Components are components to build searchengines, repositories
- *     and archives, based on Meresco Core.
- *     Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
- *     Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
- *        http://www.kennisnetictopschool.nl
- *     Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
- *     Copyright (C) 2009 Tilburg University http://www.uvt.nl
- *     Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
- *     Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
- *
- *     This file is part of Meresco Components.
- *
- *     Meresco Components is free software; you can redistribute it and/or modify
- *     it under the terms of the GNU General Public License as published by
- *     the Free Software Foundation; either version 2 of the License, or
- *     (at your option) any later version.
- *
- *     Meresco Components is distributed in the hope that it will be useful,
- *     but WITHOUT ANY WARRANTY; without even the implied warranty of
- *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *     GNU General Public License for more details.
- *
- *     You should have received a copy of the GNU General Public License
- *     along with Meresco Components; if not, write to the Free Software
- *     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- *
+ * 
+ * "Meresco Components" are components to build searchengines, repositories
+ * and archives, based on "Meresco Core". 
+ * 
+ * Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+ * Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+ * Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+ * Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+ * Copyright (C) 2009 Tilburg University http://www.uvt.nl
+ * Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+ * Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+ * 
+ * This file is part of "Meresco Components"
+ * 
+ * "Meresco Components" is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * "Meresco Components" is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with "Meresco Components"; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ * 
  * end license */
 
 #include "integerlist.h"
@@ -71,7 +72,7 @@
             v->push_back((T) element);
         }
         virtual void set(int index, uint64_t element) { v->at(index) = (T) element; }
-        virtual IntegerList* slice(int start, int stop, int step) {
+        virtual IntegerList* slice(int start, int stop) {
             return new TypedIntegerList<T>(this, start, stop);
         }
         virtual void delitems(int start, int stop) {
@@ -146,8 +147,8 @@
     iList->set(index, value);
 }
 
-IntegerList* IntegerList_slice(IntegerList *iList, int start, int stop, int step) {
-    return iList->slice(start, stop, step);
+IntegerList* IntegerList_slice(IntegerList *iList, int start, int stop) {
+    return iList->slice(start, stop);
 }
 
 void IntegerList_delitems(IntegerList* iList, int start, int stop) {
Binary files version_0/meresco/components/facetindex/._integerlist.cpp.swp and version_1/meresco/components/facetindex/._integerlist.cpp.swp differ
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/facetindex/integerlist.h version_1/meresco/components/facetindex/integerlist.h
--- version_0/meresco/components/facetindex/integerlist.h	2011-12-23 08:56:03.000000000 +0100
+++ version_1/meresco/components/facetindex/integerlist.h	2011-12-23 10:05:15.000000000 +0100
@@ -1,30 +1,32 @@
 /* begin license *
- *
- *     Meresco Components are components to build searchengines, repositories
- *     and archives, based on Meresco Core.
- *     Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
- *     Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
- *        http://www.kennisnetictopschool.nl
- *     Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
- *     Copyright (C) 2009 Tilburg University http://www.uvt.nl
- *     Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
- *
- *     This file is part of Meresco Components.
- *
- *     Meresco Components is free software; you can redistribute it and/or modify
- *     it under the terms of the GNU General Public License as published by
- *     the Free Software Foundation; either version 2 of the License, or
- *     (at your option) any later version.
- *
- *     Meresco Components is distributed in the hope that it will be useful,
- *     but WITHOUT ANY WARRANTY; without even the implied warranty of
- *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *     GNU General Public License for more details.
- *
- *     You should have received a copy of the GNU General Public License
- *     along with Meresco Components; if not, write to the Free Software
- *     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- *
+ * 
+ * "Meresco Components" are components to build searchengines, repositories
+ * and archives, based on "Meresco Core". 
+ * 
+ * Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+ * Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+ * Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+ * Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+ * Copyright (C) 2009 Tilburg University http://www.uvt.nl
+ * Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+ * Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+ * 
+ * This file is part of "Meresco Components"
+ * 
+ * "Meresco Components" is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * "Meresco Components" is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with "Meresco Components"; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ * 
  * end license */
 
 #include <vector>
@@ -41,7 +43,7 @@
         virtual uint64_t get(int index) = 0;
         virtual void append(uint64_t element) = 0;
         virtual void set(int index, uint64_t value) = 0;
-        virtual IntegerList* slice(int start, int stop, int step) = 0;
+        virtual IntegerList* slice(int start, int stop) = 0;
         virtual void delitems(int start, int stop) = 0;
         virtual int mergeFromOffset(int offset) = 0;
         virtual int save(char* filename, int offset, bool append) = 0;
@@ -55,7 +57,7 @@
     int             IntegerList_size                 (IntegerList*);
     uint64_t        IntegerList_get                  (IntegerList*, int);
     void            IntegerList_set                  (IntegerList*, int, uint64_t);
-    IntegerList*    IntegerList_slice                (IntegerList*, int, int, int);
+    IntegerList*    IntegerList_slice                (IntegerList*, int, int);
     void            IntegerList_delitems             (IntegerList* list, int start, int stop);
     int             IntegerList_mergeFromOffset      (IntegerList* list, int);
     int             IntegerList_save                 (IntegerList* list, char* filename, int offset, bool append);
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/facetindex/integerlist.py version_1/meresco/components/facetindex/integerlist.py
--- version_0/meresco/components/facetindex/integerlist.py	2011-12-23 08:56:03.000000000 +0100
+++ version_1/meresco/components/facetindex/integerlist.py	2011-12-23 10:05:15.000000000 +0100
@@ -1,31 +1,34 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Netherlands Institute for Sound and Vision http://instituut.beeldengeluid.nl/
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from sys import maxint
@@ -63,7 +66,7 @@
 IntegerList_delitems.restype = None
 
 IntegerList_slice = libFacetIndex.IntegerList_slice
-IntegerList_slice.argtypes = [INTEGERLIST, c_int, c_int, c_int]
+IntegerList_slice.argtypes = [INTEGERLIST, c_int, c_int]
 IntegerList_slice.restype = INTEGERLIST
 
 IntegerList_mergeFromOffset = libFacetIndex.IntegerList_mergeFromOffset
@@ -96,7 +99,9 @@
     def __getitem__(self, i):
         length = len(self)
         if type(i) == slice:
-            return self._IntegerListSliceView(self, i)
+            start, stop = self._parseSlice(i)
+            islice = IntegerList_slice(self, start, stop)
+            return IntegerList(cobj=islice)
         if i >= length or -i > length:
             raise IndexError(i)
         return IntegerList_get(self, i)
@@ -132,6 +137,8 @@
 
     def __iter__(self):
         for i in xrange(len(self)):
+            if i >= len(self):
+                raise StopIteration()
             yield IntegerList_get(self, i)
 
     def append(self, integer):
@@ -168,35 +175,3 @@
         if errno:
             raise IOError("[Errno %d] No such file or directory: '%s'" % (errno, filename))
 
-
-    class _IntegerListSliceView(object):
-        def __init__(self, original, slice):
-            self._original = original
-            self._start, self._stop = original._parseSlice(slice)
-
-        def __iter__(self):
-            for i in xrange(self._start, self._stop):
-                yield IntegerList_get(self._original, i)
-
-        def __getitem__(self, index):
-            if isinstance(index, slice):
-                start, stop = self._original._parseSlice(index, len(self))
-                nStart = self._start + start
-                nStop = self._start + stop
-                return self.__class__(self._original, slice(nStart, nStop))
-            if index < 0:
-                index = len(self) + index
-            index = self._start + index
-            if self._start <= index < self._stop:
-                return IntegerList_get(self._original, index)
-            raise IndexError('list index out of range')
-
-        def __len__(self):
-            return self._stop - self._start
-
-        def __repr__(self):
-            return repr(list(self))
-
-        def __eq__(self, rhs):
-            return list(self) == list(rhs)
-
Binary files version_0/meresco/components/facetindex/.integerlist.py.swp and version_1/meresco/components/facetindex/.integerlist.py.swp differ
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/facetindex/integerlisttest.py version_1/test/facetindex/integerlisttest.py
--- version_0/test/facetindex/integerlisttest.py	2011-12-23 08:56:03.000000000 +0100
+++ version_1/test/facetindex/integerlisttest.py	2011-12-23 10:05:15.000000000 +0100
@@ -1,31 +1,34 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Netherlands Institute for Sound and Vision http://instituut.beeldengeluid.nl/
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from cq2utils import CQ2TestCase
@@ -91,21 +94,6 @@
             self.assertRaises(ValueError, lambda: l[::-1])
             assertSlice(range(98), l[-200:-1][:-1])
 
-    def testSlicesImmutable(self):
-        s = IntegerList(100)[1:5]
-        self.assertRaises(AttributeError, lambda: s.append(101))
-        self.assertRaises(AttributeError, lambda: s.extend([101]))
-        try:
-            del s[0]
-            self.fail('del should have failed.')
-        except TypeError, e:
-            pass
-        try:
-            s[0] = 200
-            self.fail('assignment should have failed.')
-        except TypeError, e:
-            pass
-
     def testCopySlice(self):
         for l in [IntegerList(100), IntegerList(100, use64bits=True)]:
             m = l[:]
@@ -343,14 +331,60 @@
         for x in il:
             pass
         t1 = time()
-        self.assertTiming(0.15, t1 - t0, 0.25)
+        self.assertTiming(0.30, t1 - t0, 0.5)
+
+    def testIterWhileModifyingList(self):
+        il = IntegerList()
+        il.extend([1,2,3,4])
+        i = iter(il)
+        numbers = []
+        numbers.append(i.next())
+        numbers.append(i.next())
+        del il[0]
+        numbers.append(i.next())
+        self.assertRaises(StopIteration, i.next)
+        self.assertEquals([1,2,4], numbers)
+        self.assertEquals([2,3,4], il)
+
+        # 3 is not returned, although still in the list
+        # this is default python behaviour
+
+        l = [1,2,3,4]
+        i = iter(l)
+        numbers = []
+        numbers.append(i.next())
+        numbers.append(i.next())
+        del l[0]
+        numbers.append(i.next())
+        self.assertRaises(StopIteration, i.next)
+        self.assertEquals([1,2,4], numbers)
+        self.assertEquals([2,3,4], l)
+
+
+    def testIterateOnSliceWhileModifyingList(self):
+        il = IntegerList()
+        il.extend([1,2,3,4])
+        self.assertEquals([1,2,3,4], list(il[:]))
+        slice = iter(il[:])
+        numbers = []
+        numbers.append(slice.next())
+        numbers.append(slice.next())
+        del il[0]
+        il.append(5)
+        del il[1]
+        il.append(6)
+        numbers.append(slice.next())
+        numbers.append(slice.next())
+        self.assertEquals([2,4,5,6], list(il[:]))
+        self.assertEquals([1,2,3,4], numbers)
+
 
     def testSlicingPerformance(self):
         il = IntegerList(10 ** 7)
         t0 = time()
         segment = il[:][:10]
         t1 = time()
-        self.assertTiming(0.00, t1 - t0, 0.001)
+        self.assertTiming(0.02, t1 - t0, 0.04)
 
     def probeMemory(self):
         self.vmsize = self._getVmSize()
Binary files version_0/test/facetindex/.integerlisttest.py.swp and version_1/test/facetindex/.integerlisttest.py.swp differ
