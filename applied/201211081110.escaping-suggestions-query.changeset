Changeset created on Thu Nov 08 11:10:16 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Escape suggestions query in sru output.

    Suggestions with special xml characters are now escaped.
    Also removed a unused for loop over compose

Baseline version: 4.3.6

From 029c94f21e9248663bdf984474bd2501457d7c02 Mon Sep 17 00:00:00 2001
From: Tom van der Sommen <tom@seecr.nl>
Date: Tue, 6 Nov 2012 12:10:38 +0100
Subject: [PATCH 1/2] TS/HM: Removed superfluous compose for-loop construct

---
 meresco/components/sru/sruparser.py |    3 +--
 test/sru/sruparsertest.py           |    8 ++++----
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/meresco/components/sru/sruparser.py b/meresco/components/sru/sruparser.py
index 761f8eb..15e8bf0 100644
--- a/meresco/components/sru/sruparser.py
+++ b/meresco/components/sru/sruparser.py
@@ -104,8 +104,7 @@ class SruParser(Observable):
             operationMethod = self._explain
             if operation == 'searchRetrieve':
                 operationMethod = self._searchRetrieve
-            for data in compose(operationMethod(arguments, **kwargs)):
-                yield data
+            yield operationMethod(arguments, **kwargs)
         except SruException, e:
             yield DIAGNOSTICS % (e.code, xmlEscape(e.details), xmlEscape(e.message))
             raise StopIteration()
diff --git a/test/sru/sruparsertest.py b/test/sru/sruparsertest.py
index 1bb202a..6aef46f 100644
--- a/test/sru/sruparsertest.py
+++ b/test/sru/sruparsertest.py
@@ -44,7 +44,7 @@ class SruParserTest(SeecrTestCase):
     def testExplainWithPresetValues(self):
         component = SruParser(host='TEST_SERVER_HOST', port='TEST_SERVER_PORT', description='TEST_SERVER_DESCRIPTION', modifiedDate='TEST_SERVER_DATE', database='DATABASE', wsdl='http://somewhe.re/wsdl')
 
-        result = "".join(list(component.handleRequest(arguments={}, Headers={'Host': '1.2.3.4:80'}, RequestURI="/sru")))
+        result = "".join(compose(component.handleRequest(arguments={}, Headers={'Host': '1.2.3.4:80'}, RequestURI="/sru")))
         self.assertEqualsWS("""HTTP/1.0 200 OK
 Content-Type: text/xml; charset=utf-8
 
@@ -78,7 +78,7 @@ xmlns:zr="http://explain.z3950.org/dtd/2.0/">
     def testExplainWithoutPresetValues(self):
         component = SruParser()
 
-        result = "".join(list(component.handleRequest(arguments={'operation': ['explain'], 'version': ['1.2']}, Headers={'Host': '1.2.3.4:8080'}, RequestURI="/sru?operation=explain&version=1.2")))
+        result = "".join(compose(component.handleRequest(arguments={'operation': ['explain'], 'version': ['1.2']}, Headers={'Host': '1.2.3.4:8080'}, RequestURI="/sru?operation=explain&version=1.2")))
         self.assertEqualsWS("""HTTP/1.0 200 OK
 Content-Type: text/xml; charset=utf-8
 
@@ -183,7 +183,7 @@ xmlns:zr="http://explain.z3950.org/dtd/2.0/">
         sruHandler.returnValues['searchRetrieve'] = (x for x in ["<result>mock result XML</result>"])
         component.addObserver(sruHandler)
 
-        response = "".join(component.handleRequest(arguments=dict(version=['1.1'], query= ['aQuery'], operation=['searchRetrieve'], startRecord=['11'], maximumRecords = ['15'], sortKeys=['aField,,1'])))
+        response = "".join(compose(component.handleRequest(arguments=dict(version=['1.1'], query= ['aQuery'], operation=['searchRetrieve'], startRecord=['11'], maximumRecords = ['15'], sortKeys=['aField,,1']))))
 
         self.assertEquals(['searchRetrieve'], [m.name for m in sruHandler.calledMethods])
         self.assertEquals((), sruHandler.calledMethods[0].args)
@@ -207,7 +207,7 @@ xmlns:zr="http://explain.z3950.org/dtd/2.0/">
         sruHandler.returnValues['searchRetrieve'] = (x for x in ["<result>mock result XML</result>"])
         component.addObserver(sruHandler)
 
-        list(component.handleRequest(arguments={'version':['1.1'], 'query': ['aQuery'], 'operation':['searchRetrieve'], 'x-something':['something']}))
+        list(compose(component.handleRequest(arguments={'version':['1.1'], 'query': ['aQuery'], 'operation':['searchRetrieve'], 'x-something':['something']})))
 
         self.assertEquals(['searchRetrieve'], [m.name for m in sruHandler.calledMethods])
         self.assertEquals((), sruHandler.calledMethods[0].args)
-- 
1.7.1


From 8a0ae68362eba20a033554462e13d45fc5012053 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Thu, 8 Nov 2012 11:02:31 +0000
Subject: [PATCH 2/2] JPM/HM: Xml escape suggestions query

---
 .../components/sru/addsuggestionsresponsedata.py   |    4 +++-
 test/sru/addsuggestionsresponsedatatest.py         |    3 ++-
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/meresco/components/sru/addsuggestionsresponsedata.py b/meresco/components/sru/addsuggestionsresponsedata.py
index 8e0fc6e..2bc3d92 100644
--- a/meresco/components/sru/addsuggestionsresponsedata.py
+++ b/meresco/components/sru/addsuggestionsresponsedata.py
@@ -24,6 +24,8 @@
 # 
 ## end license ##
 
+from xml.sax.saxutils import escape as xmlEscape
+
 class AddSuggestionsResponseData(object):
 
     def extraResponseData(self, response, suggestionsQuery, **kwargs):
@@ -46,6 +48,6 @@ class AddSuggestionsResponseData(object):
                 rightPart = newSuggestionsQuery[stop:]
 
                 newSuggestionsQuery = leftPart + replaceWord + rightPart
-            yield "<suggestion>%s</suggestion>\n" % newSuggestionsQuery
+            yield "<suggestion>%s</suggestion>\n" % xmlEscape(newSuggestionsQuery)
         yield '</suggestions>\n'
 
diff --git a/test/sru/addsuggestionsresponsedatatest.py b/test/sru/addsuggestionsresponsedatatest.py
index 17da0b5..da71351 100644
--- a/test/sru/addsuggestionsresponsedatatest.py
+++ b/test/sru/addsuggestionsresponsedatatest.py
@@ -34,12 +34,13 @@ class AddSuggestionsResponseDataTest(SeecrTestCase):
     def testCreateExtraResponseDataWithSingleSuggestions(self):
         suggestions = AddSuggestionsResponseData()
         response = Response(total=0, hits=[])
-        response.suggestions={'query': (0, 5, ['que', 'emery', 'queen'])}
+        response.suggestions={'query': (0, 5, ['que', 'emery', 'queen', 'qu<een'])}
         responseData = ''.join(compose(suggestions.extraResponseData(response=response, suggestionsQuery="query")))
         self.assertEqualsWS("""<suggestions xmlns="http://meresco.org/namespace/suggestions">
     <suggestion>que</suggestion>
     <suggestion>emery</suggestion>
     <suggestion>queen</suggestion>
+    <suggestion>qu&lt;een</suggestion>
 </suggestions>
 """, responseData)
 
-- 
1.7.1

