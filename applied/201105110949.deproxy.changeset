Changeset created on Wed May 11 09:49:43 CEST 2011 by Seek You Too

Description: Deproxy component from Edurep

    Only deproxy for given ipaddresses and ipranges.
    Copied deproxy component from Edurep.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.11-Edurep/version_1

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/meresco/components/http/deproxy.py version_2/meresco/components/http/deproxy.py
--- version_1/meresco/components/http/deproxy.py	1970-01-01 01:00:00.000000000 +0100
+++ version_2/meresco/components/http/deproxy.py	2011-05-11 09:48:54.000000000 +0200
@@ -0,0 +1,51 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2010-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+from ipfilter import IpFilter
+
+class Deproxy(Observable):
+    def __init__(self, deproxyForIps=None, deproxyForIpRanges=None):
+        Observable.__init__(self)
+        if not (deproxyForIps or deproxyForIpRanges):
+            raise ValueError('Expected ipaddresses to deproxy for.')
+        self._ipfilter = IpFilter(allowedIps=deproxyForIps, allowedIpRanges=deproxyForIpRanges)
+
+    def handleRequest(self, Client, Headers, **kwargs):
+        clientHost, clientPort = Client
+        if self._ipfilter.filterIpAddress(clientHost):
+            clientHost = _firstFromCommaSeparated(Headers.get("X-Forwarded-For", clientHost))
+
+            host = _firstFromCommaSeparated(Headers.get("X-Forwarded-Host",  Headers.get('Host', '')))
+            if host != '':
+                Headers['Host'] = host
+
+        return self.all.handleRequest(Client=(clientHost, clientPort), Headers=Headers, **kwargs)
+
+def _firstFromCommaSeparated(s):
+    return s.split(",", 1)[0].strip()
+
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/meresco/components/http/__init__.py version_2/meresco/components/http/__init__.py
--- version_1/meresco/components/http/__init__.py	2011-05-11 08:09:11.000000000 +0200
+++ version_2/meresco/components/http/__init__.py	2011-05-11 09:48:54.000000000 +0200
@@ -1,29 +1,30 @@
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from observablehttpserver import ObservableHttpServer
@@ -40,3 +41,4 @@
 from apachelogger import ApacheLogger
 from utils import insertHeader
 from handlerequestfilter import HandleRequestFilter
+from deproxy import Deproxy
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/meresco/components/http/ipfilter.py version_2/meresco/components/http/ipfilter.py
--- version_1/meresco/components/http/ipfilter.py	2011-05-11 08:09:11.000000000 +0200
+++ version_2/meresco/components/http/ipfilter.py	2011-05-11 09:48:54.000000000 +0200
@@ -1,56 +1,61 @@
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from handlerequestfilter import HandleRequestFilter
 
 class IpFilter(HandleRequestFilter):
 
-    def __init__(self, allowedIps=[], allowedIpRanges=[]):
+    def __init__(self, allowedIps=None, allowedIpRanges=None):
         HandleRequestFilter.__init__(self, self._filter)
-        self._allowedIps = allowedIps
-        self._allowedIpRanges = [(self._convertToNumber(start), self._convertToNumber(end))
-            for start,end in allowedIpRanges]
+        self._allowedIps = allowedIps if allowedIps else []
+        self._allowedIpRanges = [(self.convertToNumber(start), self.convertToNumber(end))
+            for start,end in allowedIpRanges] if allowedIpRanges else []
 
     def _filter(self, Client, Headers, **kwargs):
         ipaddress = Client[0] if Client != None else '0.0.0.0'
         if 'X-Meresco-Ipfilter-Fake-Ip' in Headers and ipaddress == '127.0.0.1':
             ipaddress = Headers['X-Meresco-Ipfilter-Fake-Ip']
+        return self.filterIpAddress(ipaddress)
 
+    def filterIpAddress(self, ipaddress):
         if ipaddress in self._allowedIps:
             return True
 
-        ipNumber = self._convertToNumber(ipaddress)
+        ipNumber = self.convertToNumber(ipaddress)
         for (start, end) in self._allowedIpRanges:
             if start <= ipNumber < end:
                 return True
 
         return False
 
-    def _convertToNumber(self, ip):
+    @staticmethod
+    def convertToNumber(ip):
         a,b,c,d = [int(x) for x in ip.split('.')]
         return pow(256,3)*a + pow(256,2)*b + pow(256, 1)*c + d
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/test/_alltests.py version_2/test/_alltests.py
--- version_1/test/_alltests.py	2011-05-11 08:09:11.000000000 +0200
+++ version_2/test/_alltests.py	2011-05-11 09:48:54.000000000 +0200
@@ -79,6 +79,7 @@
 from http.apacheloggertest import ApacheLoggerTest
 from http.argumentsinsessiontest import ArgumentsInSessionTest
 from http.basicauthenticationtest import BasicAuthenticationTest
+from http.deproxytest import DeproxyTest
 from http.fileservertest import FileServerTest
 from http.handlerequestfiltertest import HandleRequestFilterTest
 from http.ipfiltertest import IpFilterTest
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/test/http/deproxytest.py version_2/test/http/deproxytest.py
--- version_1/test/http/deproxytest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_2/test/http/deproxytest.py	2011-05-11 09:48:54.000000000 +0200
@@ -0,0 +1,130 @@
+# -*- coding: utf-8 -*-
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2010-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from unittest import TestCase
+
+from meresco.core import Observable
+
+from cq2utils import CallTrace
+
+from meresco.components.http import Deproxy
+
+
+class DeproxyTest(TestCase):
+    def testClientInCaseNoXForwardedForHeader(self):
+        clientfromxforwardedfor = Deproxy(deproxyForIps=['1.1.1.1'])
+        observer = CallTrace()
+        clientfromxforwardedfor.addObserver(observer)
+
+        observable = Observable()
+        observable.addObserver(clientfromxforwardedfor)
+
+        list(observable.any.handleRequest(Client=("1.1.1.1", 11111), Headers={}))
+
+        self.assertEquals(1, len(observer.calledMethods))
+        handleRequestCallKwargs = observer.calledMethods[0].kwargs
+        self.assertEquals("1.1.1.1", handleRequestCallKwargs['Client'][0])
+        self.assertEquals({}, handleRequestCallKwargs['Headers'])
+
+
+    def testDeproxy(self):
+        clientfromxforwardedfor = Deproxy(deproxyForIps=['1.1.1.1'])
+        observer = CallTrace()
+        clientfromxforwardedfor.addObserver(observer)
+
+        observable = Observable()
+        observable.addObserver(clientfromxforwardedfor)
+
+        list(observable.any.handleRequest(
+            Client=("1.1.1.1", 11111),
+            Headers={"X-Forwarded-For": "2.2.2.2"}))
+
+        self.assertEquals(1, len(observer.calledMethods))
+        handleRequestCallKwargs = observer.calledMethods[0].kwargs
+        self.assertEquals("2.2.2.2", handleRequestCallKwargs['Client'][0])
+        self.assertEquals({"X-Forwarded-For": "2.2.2.2"}, handleRequestCallKwargs['Headers'])
+
+    def testClientFromMulitpleXForwardedForEntries(self):
+        clientfromxforwardedfor = Deproxy(deproxyForIps=['1.1.1.1'])
+        observer = CallTrace()
+        clientfromxforwardedfor.addObserver(observer)
+
+        observable = Observable()
+        observable.addObserver(clientfromxforwardedfor)
+
+        list(observable.any.handleRequest(
+             Client=("1.1.1.1", 11111),
+             Headers={"X-Forwarded-For": "2.2.2.2,3.3.3.3,4.4.4.4"}))
+
+        self.assertEquals(1, len(observer.calledMethods))
+        handleRequestCallKwargs = observer.calledMethods[0].kwargs
+        self.assertEquals("2.2.2.2", handleRequestCallKwargs['Client'][0])
+        self.assertEquals({"X-Forwarded-For": "2.2.2.2,3.3.3.3,4.4.4.4"}, handleRequestCallKwargs['Headers'])
+
+        list(observable.any.handleRequest(
+             Client=("1.1.1.1", 11111),
+             Headers={"X-Forwarded-For": " 2.2.2.2 , 3.3.3.3,4.4.4.4"}))
+        self.assertEquals("2.2.2.2", observer.calledMethods[1].kwargs['Client'][0])
+
+    def testHostFromXForwardedHost(self):
+        clientfromxforwardedfor = Deproxy(deproxyForIpRanges=[
+            ('9.9.9.0', '9.9.9.255')])
+        observer = CallTrace()
+        clientfromxforwardedfor.addObserver(observer)
+
+        observable = Observable()
+        observable.addObserver(clientfromxforwardedfor)
+
+        Headers={
+            "Host": "1.1.1.1:11111",
+            "X-Forwarded-Host": "2.2.2.2:22222,3.3.3.3:33333,4.4.4.4:44444"
+        }
+        list(observable.any.handleRequest(Client=("9.9.9.9", 9999), Headers=Headers))
+
+        self.assertEquals(1, len(observer.calledMethods))
+        handleRequestCallKwargs = observer.calledMethods[0].kwargs
+        self.assertEquals("2.2.2.2:22222", handleRequestCallKwargs['Headers']['Host'])
+
+    def testDeproxyMustHaveIps(self):
+        self.assertRaises(ValueError, Deproxy)
+
+    def testDeproxyForIps(self):
+        clientfromxforwardedfor = Deproxy(deproxyForIps=['3.3.3.3'])
+        observer = CallTrace()
+        clientfromxforwardedfor.addObserver(observer)
+
+        observable = Observable()
+        observable.addObserver(clientfromxforwardedfor)
+
+        list(observable.any.handleRequest(
+            Client=("1.1.1.1", 11111),
+            Headers={"X-Forwarded-For": "2.2.2.2"}))
+
+        self.assertEquals(1, len(observer.calledMethods))
+        handleRequestCallKwargs = observer.calledMethods[0].kwargs
+        self.assertEquals("1.1.1.1", handleRequestCallKwargs['Client'][0])
+        self.assertEquals({"X-Forwarded-For": "2.2.2.2"}, handleRequestCallKwargs['Headers'])
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/test/http/ipfiltertest.py version_2/test/http/ipfiltertest.py
--- version_1/test/http/ipfiltertest.py	2011-05-11 08:09:11.000000000 +0200
+++ version_2/test/http/ipfiltertest.py	2011-05-11 09:48:54.000000000 +0200
@@ -1,30 +1,32 @@
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from unittest import TestCase
 
 from cq2utils import CallTrace
@@ -110,5 +112,5 @@
     def testConvertToNumber(self):
         iprange = IpFilter()
 
-        self.assertEquals(3232235776, iprange._convertToNumber('192.168.1.0'))
-        self.assertEquals(0, iprange._convertToNumber('0.0.0.0'))
+        self.assertEquals(3232235776, iprange.convertToNumber('192.168.1.0'))
+        self.assertEquals(0, iprange.convertToNumber('0.0.0.0'))
