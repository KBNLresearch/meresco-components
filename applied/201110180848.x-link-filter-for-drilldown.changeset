Changeset created on Tue Oct 18 08:48:39 UTC 2011 by Seecr (Seek You Too B.V.)

Description: X-Link-Filter for Drilldown

    - Pass all kwargs to docsetFromQuery to rewrite cqlAst is needed.
    - CombineParts now Transparant

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.19-Edurep/version_0

Only in version_0: build
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/combineparts.py version_1/meresco/components/combineparts.py
--- version_0/meresco/components/combineparts.py	2011-10-11 16:06:40.000000000 +0200
+++ version_1/meresco/components/combineparts.py	2011-10-18 10:48:21.000000000 +0200
@@ -24,12 +24,12 @@
 # 
 ## end license ##
 
-from meresco.core import Observable
+from meresco.core import Transparant
 from xml.sax.saxutils import escape as xmlEscape
 
-class CombineParts(Observable):
+class CombineParts(Transparant):
     def __init__(self, combinations, allowMissingParts=None):
-        Observable.__init__(self)
+        Transparant.__init__(self)
         self._combinations = combinations
         self._allowMissingParts = allowMissingParts or []
 
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/components/sru/sruhandler.py version_1/meresco/components/sru/sruhandler.py
--- version_0/meresco/components/sru/sruhandler.py	2011-10-11 16:06:40.000000000 +0200
+++ version_1/meresco/components/sru/sruhandler.py	2011-10-18 10:48:21.000000000 +0200
@@ -63,7 +63,7 @@
                 sortBy=sortBy,
                 sortDescending=sortDescending,
                 **kwargs)
-            docset = self.any.docsetFromQuery(cqlAbstractSyntaxTree=cqlAbstractSyntaxTree)
+            docset = self.any.docsetFromQuery(cqlAbstractSyntaxTree=cqlAbstractSyntaxTree, **kwargs)
         except Exception, e:
             yield DIAGNOSTICS % ( QUERY_FEATURE_UNSUPPORTED[0], QUERY_FEATURE_UNSUPPORTED[1], xmlEscape(str(e)))
             return
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/sru/sruhandlertest.py version_1/test/sru/sruhandlertest.py
--- version_0/test/sru/sruhandlertest.py	2011-10-11 16:06:39.000000000 +0200
+++ version_1/test/sru/sruhandlertest.py	2011-10-18 10:48:21.000000000 +0200
@@ -248,7 +248,7 @@
 """, result)
 
     def testSearchRetrieveVersion12(self):
-        arguments = {'version':'1.2', 'operation':'searchRetrieve',  'recordSchema':'schema', 'recordPacking':'xml', 'query':'field=value', 'startRecord':1, 'maximumRecords':2, 'x_recordSchema':['extra', 'evenmore']}
+        arguments = {'version':'1.2', 'operation':'searchRetrieve',  'recordSchema':'schema', 'recordPacking':'xml', 'query':'field=value', 'startRecord':1, 'maximumRecords':2, 'x_recordSchema':['extra', 'evenmore'], 'x_extra_key': 'extraValue'}
 
         observer = CallTrace()
         observer.returnValues['executeCQL'] = (100, range(11, 13))
@@ -274,6 +274,9 @@
         self.assertEquals(0, methodKwargs['start'])
         self.assertEquals(2, methodKwargs['stop'])
 
+        self.assertEquals(parseString('field=value'), docsetFromQueryMethod.kwargs['cqlAbstractSyntaxTree'])
+        self.assertEquals('extraValue', docsetFromQueryMethod.kwargs['x_extra_key'])
+
         self.assertEquals(6, sum(yieldRecordCalls))
 
         self.assertEqualsWS("""
@@ -347,9 +350,9 @@
 """, result)
         
         self.assertEquals((), echoedExtraRequestDataMethod.args)
-        self.assertEquals(['version', 'recordSchema', 'x_recordSchema', 'sortDescending', 'sortBy', 'maximumRecords', 'startRecord', 'query', 'operation', 'recordPacking'], echoedExtraRequestDataMethod.kwargs.keys())
+        self.assertEquals(set(['version', 'recordSchema', 'x_recordSchema', 'sortDescending', 'sortBy', 'maximumRecords', 'startRecord', 'query', 'operation', 'recordPacking', 'x_extra_key']), set(echoedExtraRequestDataMethod.kwargs.keys()))
         self.assertEquals((), extraResponseDataMethod.args)
-        self.assertEquals(set(['version', 'recordSchema', 'x_recordSchema', 'sortDescending', 'sortBy', 'maximumRecords', 'startRecord', 'query', 'operation', 'recordPacking', 'cqlAbstractSyntaxTree', 'docset']), set(extraResponseDataMethod.kwargs.keys()))
+        self.assertEquals(set(['version', 'recordSchema', 'x_recordSchema', 'sortDescending', 'sortBy', 'maximumRecords', 'startRecord', 'query', 'operation', 'recordPacking', 'cqlAbstractSyntaxTree', 'docset', 'x_extra_key']), set(extraResponseDataMethod.kwargs.keys()))
 
     def testExtraRecordDataOldStyle(self):
         arguments = {'version':'1.2', 'operation':'searchRetrieve',  'recordSchema':'schema', 'recordPacking':'xml', 'query':'field=value', 'startRecord':1, 'maximumRecords':2, 'x_recordSchema':['extra', 'evenmore']}
