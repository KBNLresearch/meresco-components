Changeset created on Tue Jul 20 16:03:05 CEST 2010 by Seek You Too

Description: Fixed the SessionHandler's session timeout.

    A Session timed out wether or not there was http activity
    in the mean time (before the original timeout expired).
    The timeout is now updated for each moment of incoming 
    http activity for the respective session.

Baseline version: meresco-components/workingsets/3.1-CQ2/version_0

diff --unidirectional-new-file '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' --recursive --unified version_0/meresco/components/http/sessionhandler.py version_1/meresco/components/http/sessionhandler.py
--- version_0/meresco/components/http/sessionhandler.py	2010-07-20 14:28:10.000000000 +0200
+++ version_1/meresco/components/http/sessionhandler.py	2010-07-20 15:58:04.000000000 +0200
@@ -66,6 +66,8 @@
             sessionid = md5('%s%s%s%s' % (time(), randint(0, 9999999999), clientaddress, self._secretSeed)).hexdigest()
             session = Session(sessionid)
             self._sessions[sessionid] = session
+        else:
+            self._sessions.touch(sessionid)
 
         extraHeader = 'Set-Cookie: session%s=%s; path=/' % (self._nameSuffix, sessionid)
 
diff --unidirectional-new-file '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' --recursive --unified version_0/test/http/sessionhandlertest.py version_1/test/http/sessionhandlertest.py
--- version_0/test/http/sessionhandlertest.py	2010-07-20 14:28:10.000000000 +0200
+++ version_1/test/http/sessionhandlertest.py	2010-07-20 15:58:04.000000000 +0200
@@ -135,13 +135,23 @@
 
         result = ''.join(compose(handler.handleRequest(RequestURI='/path', Client=('127.0.0.1', 12345))))
         firstSessionId = self.assertSessionCookie(result)
+        handler._sessions._now = lambda: currentTime + HALF_AN_HOUR - 1
+        result = ''.join(compose(handler.handleRequest(RequestURI='/path', Client=('127.0.0.1', 12345), Headers={'Cookie': 'session=%s' % firstSessionId})))
+        sessionIdHalfAnHourMinusOne = self.assertSessionCookie(result)
+
+        self.assertEquals(firstSessionId, sessionIdHalfAnHourMinusOne)
 
         handler._sessions._now = lambda: currentTime + HALF_AN_HOUR + 1
+        result = ''.join(compose(handler.handleRequest(RequestURI='/path'    , Client=('127.0.0.1', 12345), Headers={'Cookie': 'session=%s' % firstSessionId})))
+        sessionIdHalfAnHourPlusOne = self.assertSessionCookie(result)
 
-        result = ''.join(compose(handler.handleRequest(RequestURI='/path', Client=('127.0.0.1', 12345), Headers={'Cookie': 'session=%s' % firstSessionId})))
-        sessionIdAfterHalfAnHour = self.assertSessionCookie(result)
+        self.assertEquals(firstSessionId, sessionIdHalfAnHourPlusOne)
+
+        handler._sessions._now = lambda: currentTime + (HALF_AN_HOUR * 2) + 2
+        result = ''.join(compose(handler.handleRequest(RequestURI='/path'    , Client=('127.0.0.1', 12345), Headers={'Cookie': 'session=%s' % firstSessionId})))
+        sessionIdJustExpired = self.assertSessionCookie(result)
 
-        self.assertNotEqual(firstSessionId, sessionIdAfterHalfAnHour)
+        self.assertNotEqual(firstSessionId, sessionIdJustExpired)
 
     def assertSessionCookie(self, handleRequestOutput, nameSuffix=''):
         header, body = handleRequestOutput.split(utils.CRLF*2,1)
