Changeset created on Fri Jan 20 14:14:37 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Disallow emtpy identifiers in storage and msgbox 

    Extension of previous disallow-empty-identifiers changeset. 
    Also disallow in storage and UpdateAdapterToMsgbox

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.27-Edurep/version_1

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_1/meresco/components/msgbox/updateadapter.py /vol/extra_disk/development/meresco-components/workingsets/3.4.27-Edurep/version_2/meresco/components/msgbox/updateadapter.py
--- version_1/meresco/components/msgbox/updateadapter.py	2012-01-20 10:17:16.000000000 +0100
+++ version_2/meresco/components/msgbox/updateadapter.py	2012-01-20 15:11:11.000000000 +0100
@@ -39,8 +39,12 @@
 class UpdateAdapterToMsgbox(Observable):
 
     def add(self, identifier, data, **kwargs):
+        if not identifier:
+            raise ValueError("Empty identifier not allowed.")
         return self.all.add(identifier='%s.add' % identifier, filedata=data, **kwargs)
 
     def delete(self, identifier):
+        if not identifier:
+            raise ValueError("Empty identifier not allowed.")
         return self.all.add(identifier='%s.delete' % identifier, filedata='')
 
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_1/meresco/components/storagecomponent.py /vol/extra_disk/development/meresco-components/workingsets/3.4.27-Edurep/version_2/meresco/components/storagecomponent.py
--- version_1/meresco/components/storagecomponent.py	2012-01-20 10:17:16.000000000 +0100
+++ version_2/meresco/components/storagecomponent.py	2012-01-20 15:11:11.000000000 +0100
@@ -59,6 +59,8 @@
 
     def add(self, identifier, partname, data):
         """should be obsoleted in favor of addDocumentPart"""
+        if not identifier:
+            raise ValueError("Empty identifier is not allowed.")
         sink = self._storage.put((identifier, partname))
         try:
             sink.send(data)
@@ -66,6 +68,8 @@
             return sink.close()
 
     def delete(self, identifier):
+        if not identifier:
+            raise ValueError("Empty identifier is not allowed.")
         for partname in self._partsRemovedOnDelete:
             self.deletePart(identifier, partname)
 
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_1/test/msgbox/updateadaptertest.py /vol/extra_disk/development/meresco-components/workingsets/3.4.27-Edurep/version_2/test/msgbox/updateadaptertest.py
--- version_1/test/msgbox/updateadaptertest.py	2012-01-20 10:17:16.000000000 +0100
+++ version_2/test/msgbox/updateadaptertest.py	2012-01-20 15:11:11.000000000 +0100
@@ -101,4 +101,16 @@
         self.assertEquals('data', addKwargs['filedata'])
         self.assertEquals(3, len(addKwargs.items()))
 
+    def testToAdapterAndMsgboxAddEmptyIdentifier(self):
+        adapter = UpdateAdapterToMsgbox()
+        adapter.addObserver(self.msgbox)
+        
+        self.assertRaises(ValueError, lambda: adapter.add(identifier='', partname='partname', data='data'))
+        self.assertRaises(ValueError, lambda: adapter.add(identifier=None, partname='partname', data='data'))
 
+    def testToAdapterAndMsgboxDeleteEmptyIdentifier(self):
+        adapter = UpdateAdapterToMsgbox()
+        adapter.addObserver(self.msgbox)
+        
+        self.assertRaises(ValueError, lambda: adapter.delete(identifier=''))
+        self.assertRaises(ValueError, lambda: adapter.delete(identifier=None))
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_1/test/storagecomponenttest.py /vol/extra_disk/development/meresco-components/workingsets/3.4.27-Edurep/version_2/test/storagecomponenttest.py
--- version_1/test/storagecomponenttest.py	2012-01-20 10:17:16.000000000 +0100
+++ version_2/test/storagecomponenttest.py	2012-01-20 15:11:11.000000000 +0100
@@ -55,6 +55,15 @@
         if self.revisionAvailable:
             self.assertEquals((0,1), (old,new))
 
+    def testAddEmptyIdentifier(self):
+        self.assertRaises(ValueError, lambda: self.storageComponent.add("", "part", "data"))
+        self.assertRaises(ValueError, lambda: self.storageComponent.add(None, "part", "data"))
+
+    def testDeleteEmptyIdentifier(self):
+        self.assertRaises(ValueError, lambda: self.storageComponent.delete(""))
+        self.assertRaises(ValueError, lambda: self.storageComponent.delete(None))
+        self.storageComponent.deletePart("","part")
+
     def testIsAvailableIdAndPart(self):
         sink = self.storage.put(('some:thing:anId-123','somePartName'))
         sink.send('read string')
