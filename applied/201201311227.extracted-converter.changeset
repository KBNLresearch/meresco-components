Changeset created on Tue Jan 31 12:27:21 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Extracted converter from xmlpump

    The converter class is now in its own file. This is because converter itself
    had nothing todo with XML and is now also used for JSON in Edurep.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/3.4.28.1-Edurep/version_1

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_1/meresco/components/converter.py /vol/extra_disk/development/meresco-components/workingsets/3.4.28.1-Edurep/version_2/meresco/components/converter.py
--- version_1/meresco/components/converter.py	1970-01-01 01:00:00.000000000 +0100
+++ version_2/meresco/components/converter.py	2012-01-31 13:26:29.000000000 +0100
@@ -0,0 +1,67 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from meresco.core import Observable
+from warnings import warn
+
+class Converter(Observable):
+    def __init__(self, name=None, fromKwarg=None, toKwarg=None):
+        Observable.__init__(self, name=name)
+        if fromKwarg is None:
+            warn("This use of %s is deprecated. Specify 'fromKwarg' and 'toKwarg' parameters to convert specific keyword argument." % self.__class__.__name__, DeprecationWarning)
+        self._fromKwarg = fromKwarg
+        self._toKwarg = toKwarg if toKwarg else self._fromKwarg
+
+    def unknown(self, msg, *args, **kwargs):
+        if self._fromKwarg is None:
+            newArgs = [self._detectAndConvert(arg) for arg in args]
+            newKwargs = dict((key, self._detectAndConvert(value)) for key, value in kwargs.items())
+            return self.all.unknown(msg, *newArgs, **newKwargs)
+
+        try:
+            oldvalue = kwargs[self._fromKwarg]
+        except KeyError:
+            pass
+        else:
+            del kwargs[self._fromKwarg]
+            kwargs[self._toKwarg] = self._convert(oldvalue)
+
+        return self.all.unknown(msg, *args, **kwargs)
+
+    def _convert(self, anObject):
+        raise NotImplementedError()
+
+    def _canConvert(self, anObject):
+        "deprecated"
+        raise NotImplementedError()
+
+    def _detectAndConvert(self, anObject):
+        "deprecated"
+        if self._canConvert(anObject):
+            return self._convert(anObject)
+        return anObject
+
+
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_1/meresco/components/__init__.py /vol/extra_disk/development/meresco-components/workingsets/3.4.28.1-Edurep/version_2/meresco/components/__init__.py
--- version_1/meresco/components/__init__.py	2012-01-30 11:48:30.000000000 +0100
+++ version_2/meresco/components/__init__.py	2012-01-31 13:26:29.000000000 +0100
@@ -7,8 +7,8 @@
 # Copyright (C) 2007 SURFnet. http://www.surfnet.nl
 # Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 # Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
-# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2010-2012 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # 
 # This file is part of "Meresco Components"
 # 
@@ -28,6 +28,7 @@
 # 
 ## end license ##
 
+from converter import Converter
 from timeddictionary import TimedDictionary
 from storagecomponent import StorageComponent, defaultSplit, defaultJoin
 from xmlpump import XmlParseAmara, XmlPrintAmara, Amara2Lxml, Lxml2Amara, XmlPrintLxml, XmlParseLxml, FileParseLxml
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_1/meresco/components/xmlpump.py /vol/extra_disk/development/meresco-components/workingsets/3.4.28.1-Edurep/version_2/meresco/components/xmlpump.py
--- version_1/meresco/components/xmlpump.py	2012-01-30 11:48:30.000000000 +0100
+++ version_2/meresco/components/xmlpump.py	2012-01-31 13:26:29.000000000 +0100
@@ -1,40 +1,40 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    Meresco Components are components to build searchengines, repositories
-#    and archives, based on Meresco Core.
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of Meresco Components.
-#
-#    Meresco Components is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Components is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Components; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+# Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2010, 2012 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
-from meresco.core.observable import Observable
+from meresco.components import Converter
 from amara.binderytools import bind_string
 from amara.bindery import is_element
 from lxml.etree import parse, _ElementTree, tostring, _XSLTResultTree
 from cStringIO import StringIO
 from re import compile
-from warnings import warn
 
 try:
     from lxml.etree import _ElementStringResult, _ElementUnicodeResult
@@ -42,44 +42,6 @@
     _ElementStringResult = str
     _ElementUnicodeResult = unicode
 
-class Converter(Observable):
-    def __init__(self, name=None, fromKwarg=None, toKwarg=None):
-        Observable.__init__(self, name=name)
-        if fromKwarg is None:
-            warn("This use of %s is deprecated. Specify 'fromKwarg' and 'toKwarg' parameters to convert specific keyword argument." % self.__class__.__name__, DeprecationWarning)
-        self._fromKwarg = fromKwarg
-        self._toKwarg = toKwarg if toKwarg else self._fromKwarg
-
-    def unknown(self, msg, *args, **kwargs):
-        if self._fromKwarg is None:
-            newArgs = [self._detectAndConvert(arg) for arg in args]
-            newKwargs = dict((key, self._detectAndConvert(value)) for key, value in kwargs.items())
-            return self.all.unknown(msg, *newArgs, **newKwargs)
-
-        try:
-            oldvalue = kwargs[self._fromKwarg]
-        except KeyError:
-            pass
-        else:
-            del kwargs[self._fromKwarg]
-            kwargs[self._toKwarg] = self._convert(oldvalue)
-
-        return self.all.unknown(msg, *args, **kwargs)
-
-    def _convert(self, anObject):
-        raise NotImplementedError()
-
-    def _canConvert(self, anObject):
-        "deprecated"
-        raise NotImplementedError()
-
-    def _detectAndConvert(self, anObject):
-        "deprecated"
-        if self._canConvert(anObject):
-            return self._convert(anObject)
-        return anObject
-
-
 xmlStringRegexp = compile(r'(?s)^\s*<.*>\s*$')
 def isXmlString(anObject):
     return type(anObject) in [str, _ElementStringResult, unicode, _ElementUnicodeResult] and xmlStringRegexp.match(anObject)
