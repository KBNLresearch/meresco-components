Changeset created on Wed Jun 06 13:46:45 UTC 2012 by Seecr (Seek You Too B.V.)

Description: HttpClient for fetching pages

    HttpClient for fetching pages

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-components/workingsets/4.0.11-ozp/version_0

diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/components/http/httpclient.py /home/johan/development/sourceforge/meresco-components/workingsets/4.0.11-ozp/version_0-httpclient/meresco/components/http/httpclient.py
--- version_0/meresco/components/http/httpclient.py	1970-01-01 01:00:00.000000000 +0100
+++ version_0-httpclient/meresco/components/http/httpclient.py	2012-06-06 15:44:11.000000000 +0200
@@ -0,0 +1,38 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from weightless.http import httpget
+from meresco.components.http.utils import CRLF
+from lxml.etree import parse as lxmlParse
+from StringIO import StringIO
+from urllib import urlencode
+
+class HttpClient(object):
+
+    def httpGet(self, hostname, port, path, arguments, parse=True, **kwargs):
+        response = yield httpget(hostname, port, '%s?%s' % (path, urlencode(arguments)))
+        headers, body = response.split(CRLF*2)
+        raise StopIteration((headers, lxmlParse(StringIO(body)) if parse else body))
+
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/components/http/__init__.py /home/johan/development/sourceforge/meresco-components/workingsets/4.0.11-ozp/version_0-httpclient/meresco/components/http/__init__.py
--- version_0/meresco/components/http/__init__.py	2012-05-29 11:46:58.000000000 +0200
+++ version_0-httpclient/meresco/components/http/__init__.py	2012-06-06 15:44:11.000000000 +0200
@@ -42,3 +42,4 @@
 from utils import insertHeader
 from handlerequestfilter import HandleRequestFilter
 from deproxy import Deproxy
+from httpclient import HttpClient
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/_alltests.py /home/johan/development/sourceforge/meresco-components/workingsets/4.0.11-ozp/version_0-httpclient/test/_alltests.py
--- version_0/test/_alltests.py	2012-05-29 11:46:58.000000000 +0200
+++ version_0-httpclient/test/_alltests.py	2012-05-29 14:18:37.000000000 +0200
@@ -91,6 +91,7 @@
 from http.deproxytest import DeproxyTest
 from http.fileservertest import FileServerTest
 from http.handlerequestfiltertest import HandleRequestFilterTest
+from http.httpclienttest import HttpClientTest
 from http.ipfiltertest import IpFilterTest
 from http.observablehttpservertest import ObservableHttpServerTest
 from http.observablehttpsservertest import ObservableHttpsServerTest
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/http/httpclienttest.py /home/johan/development/sourceforge/meresco-components/workingsets/4.0.11-ozp/version_0-httpclient/test/http/httpclienttest.py
--- version_0/test/http/httpclienttest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_0-httpclient/test/http/httpclienttest.py	2012-06-06 15:44:11.000000000 +0200
@@ -0,0 +1,63 @@
+## begin license ##
+# 
+# "Meresco Components" are components to build searchengines, repositories
+# and archives, based on "Meresco Core". 
+# 
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Components"
+# 
+# "Meresco Components" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Components" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Components"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from seecr.test import SeecrTestCase
+
+from meresco.components.http.utils import CRLF
+from meresco.components.http.httpclient import HttpClient
+
+from weightless.core import compose
+
+from lxml.etree import tostring
+
+class HttpClientTest(SeecrTestCase):
+
+    def sendAndReceive(self, gen, answer):
+        shouldBeGenerator = str(gen.next())
+        self.assertTrue(shouldBeGenerator.startswith("<generator object httpget at 0x"), shouldBeGenerator)
+       
+        try:
+            gen.send(answer)
+        except StopIteration, e:
+            headers, body =  e.args[0]
+        return headers, body
+
+    def testPlainText(self):
+        client = HttpClient()
+
+        gen = client.httpGet(hostname='localhost', port=80, path='/', arguments={}, parse=False)
+        headers, body = self.sendAndReceive(gen, """HTTP/1.0 200 Ok\r\nContent-Type: text/xml\r\n\r\n<xml/>""")
+
+        self.assertEquals('<xml/>', body)
+        self.assertEquals(['HTTP/1.0 200 Ok', 'Content-Type: text/xml'], headers.split(CRLF))
+    
+    def testPlainXml(self):
+        client = HttpClient()
+
+        gen = client.httpGet(hostname='localhost', port=80, path='/', arguments={})
+        headers, body = self.sendAndReceive(gen,  """HTTP/1.0 200 Ok\r\nContent-Type: text/xml\r\n\r\n<xml/>""")
+        
+        self.assertEquals('<xml/>', tostring(body))
+        self.assertEquals(['HTTP/1.0 200 Ok', 'Content-Type: text/xml'], headers.split(CRLF))
